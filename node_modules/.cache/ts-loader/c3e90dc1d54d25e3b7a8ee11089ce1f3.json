{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--15-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\Setting.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\Setting.ts","mtime":1655073405503},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IE5vUmVxdWlyZW1lbnQgfSBmcm9tICJAL2VuZ2luZS90b29scy9yZXF1aXJlbWVudHMvTm9SZXF1aXJlbWVudCI7CmV4cG9ydCB2YXIgU2V0dGluZyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU2V0dGluZyhpZCwgZGlzcGxheU5hbWUsIG9wdGlvbnMsIGRlZmF1bHRWYWx1ZSkgewogICAgdmFyIHJlcXVpcmVtZW50ID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgJiYgYXJndW1lbnRzWzRdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNF0gOiBuZXcgTm9SZXF1aXJlbWVudCgpOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZXR0aW5nKTsKCiAgICB0aGlzLmlkID0gaWQ7CiAgICB0aGlzLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7CiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zOwogICAgdGhpcy5kZWZhdWx0VmFsdWUgPSBkZWZhdWx0VmFsdWU7CiAgICB0aGlzLnZhbHVlID0gZGVmYXVsdFZhbHVlOwogICAgdGhpcy5yZXF1aXJlbWVudCA9IHJlcXVpcmVtZW50OwogIH0KCiAgX2NyZWF0ZUNsYXNzKFNldHRpbmcsIFt7CiAgICBrZXk6ICJzZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldCh2YWx1ZSkgewogICAgICBpZiAoIXRoaXMuY2FuQWNjZXNzKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy52YWxpZFZhbHVlKHZhbHVlKSkgewogICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLndhcm4oIiIuY29uY2F0KHZhbHVlLCAiIGlzIG5vdCBhIHZhbGlkIHZhbHVlIGZvciBzZXR0aW5nICIpLmNvbmNhdCh0aGlzLmlkLCAiLiBJdCBjb3VsZCBiZSB0aGF0IHRoZSBvcHRpb24gaXMgbm90IHlldCB1bmxvY2tlZC4iKSk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJ2YWxpZFZhbHVlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB2YWxpZFZhbHVlKHZhbHVlKSB7CiAgICAgIHZhciBvcHRpb24gPSB0aGlzLm9wdGlvbnMuZmluZChmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbi52YWx1ZSA9PT0gdmFsdWU7CiAgICAgIH0pOwoKICAgICAgaWYgKG9wdGlvbiA9PSB1bmRlZmluZWQgfHwgIW9wdGlvbi5jYW5BY2Nlc3MpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH0sIHsKICAgIGtleTogImlzU2VsZWN0ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzU2VsZWN0ZWQodmFsdWUpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWUgPT09IHZhbHVlOwogICAgfQogIH0sIHsKICAgIGtleTogImNhbkFjY2VzcyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMucmVxdWlyZW1lbnQuaXNDb21wbGV0ZWQ7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gU2V0dGluZzsKfSgpOw=="},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\Setting.ts"],"names":[],"mappings":";;;;;AAEA,SAAQ,aAAR,QAA4B,2CAA5B;AAIA,WAAsB,OAAtB;EASI,iBAAsB,EAAtB,EAAqC,WAArC,EAA0D,OAA1D,EAAuF,YAAvF,EAAsJ;IAAA,IAA9C,WAA8C,uEAAnB,IAAI,aAAJ,EAAmB;;IAAA;;IAClJ,KAAK,EAAL,GAAU,EAAV;IACA,KAAK,WAAL,GAAmB,WAAnB;IACA,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,YAAL,GAAoB,YAApB;IAEA,KAAK,KAAL,GAAa,YAAb;IAEA,KAAK,WAAL,GAAmB,WAAnB;EACH;;EAlBL;IAAA;IAAA,OAoBI,aAAI,KAAJ,EAAY;MACR,IAAI,CAAC,KAAK,SAAV,EAAqB;QACjB;MACH;;MACD,IAAI,KAAK,UAAL,CAAgB,KAAhB,CAAJ,EAA4B;QACxB,KAAK,KAAL,GAAa,KAAb;MACH,CAFD,MAEO;QACH,OAAO,CAAC,IAAR,WAAgB,KAAhB,+CAA0D,KAAK,EAA/D;MACH;IACJ;EA7BL;IAAA;IAAA,OA+BI,oBAAW,KAAX,EAAmB;MACf,IAAM,MAAM,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAC,MAAD;QAAA,OAAY,MAAM,CAAC,KAAP,KAAiB,KAA7B;MAAA,CAAlB,CAAf;;MACA,IAAI,MAAM,IAAI,SAAV,IAAuB,CAAC,MAAM,CAAC,SAAnC,EAA8C;QAC1C,OAAO,KAAP;MACH;;MACD,OAAO,IAAP;IACH;EArCL;IAAA;IAAA,OAuCI,oBAAW,KAAX,EAAmB;MACf,OAAO,KAAK,KAAL,KAAe,KAAtB;IACH;EAzCL;IAAA;IAAA,KA2CI,eAAa;MACT,OAAO,KAAK,WAAL,CAAiB,WAAxB;IACH;EA7CL;;EAAA;AAAA","sourcesContent":["import {SettingId} from \"@/engine/features/settings/SettingId\";\r\nimport {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {NoRequirement} from \"@/engine/tools/requirements/NoRequirement\";\r\nimport {SettingOption} from \"@/engine/features/settings/SettingOption\";\r\n\r\n\r\nexport abstract class Setting<T> {\r\n    id: SettingId;\r\n    displayName: string;\r\n    options: SettingOption<T>[];\r\n    defaultValue: T;\r\n    value: T;\r\n\r\n    requirement: Requirement;\r\n\r\n    protected constructor(id: SettingId, displayName: string, options: SettingOption<T>[], defaultValue: T, requirement: Requirement = new NoRequirement()) {\r\n        this.id = id;\r\n        this.displayName = displayName;\r\n        this.options = options;\r\n        this.defaultValue = defaultValue;\r\n\r\n        this.value = defaultValue;\r\n\r\n        this.requirement = requirement;\r\n    }\r\n\r\n    set(value: T): void {\r\n        if (!this.canAccess) {\r\n            return;\r\n        }\r\n        if (this.validValue(value)) {\r\n            this.value = value;\r\n        } else {\r\n            console.warn(`${value} is not a valid value for setting ${this.id}. It could be that the option is not yet unlocked.`);\r\n        }\r\n    }\r\n\r\n    validValue(value: T): boolean {\r\n        const option = this.options.find((option) => option.value === value);\r\n        if (option == undefined || !option.canAccess) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isSelected(value: T): boolean {\r\n        return this.value === value;\r\n    }\r\n\r\n    get canAccess(): boolean {\r\n        return this.requirement.isCompleted\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}]}