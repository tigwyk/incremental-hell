{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\Setting.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\Setting.ts","mtime":1655073405503},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0IHsgTm9SZXF1aXJlbWVudCB9IGZyb20gIkAvZW5naW5lL3Rvb2xzL3JlcXVpcmVtZW50cy9Ob1JlcXVpcmVtZW50IjsKZXhwb3J0IHZhciBTZXR0aW5nID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBTZXR0aW5nKGlkLCBkaXNwbGF5TmFtZSwgb3B0aW9ucywgZGVmYXVsdFZhbHVlKSB7CiAgICB2YXIgcmVxdWlyZW1lbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IG5ldyBOb1JlcXVpcmVtZW50KCk7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNldHRpbmcpOwoKICAgIHRoaXMuaWQgPSBpZDsKICAgIHRoaXMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTsKICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7CiAgICB0aGlzLmRlZmF1bHRWYWx1ZSA9IGRlZmF1bHRWYWx1ZTsKICAgIHRoaXMudmFsdWUgPSBkZWZhdWx0VmFsdWU7CiAgICB0aGlzLnJlcXVpcmVtZW50ID0gcmVxdWlyZW1lbnQ7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU2V0dGluZywgW3sKICAgIGtleTogInNldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgIGlmICghdGhpcy5jYW5BY2Nlc3MpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnZhbGlkVmFsdWUodmFsdWUpKSB7CiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUud2FybigiIi5jb25jYXQodmFsdWUsICIgaXMgbm90IGEgdmFsaWQgdmFsdWUgZm9yIHNldHRpbmcgIikuY29uY2F0KHRoaXMuaWQsICIuIEl0IGNvdWxkIGJlIHRoYXQgdGhlIG9wdGlvbiBpcyBub3QgeWV0IHVubG9ja2VkLiIpKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInZhbGlkVmFsdWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHZhbGlkVmFsdWUodmFsdWUpIHsKICAgICAgdmFyIG9wdGlvbiA9IHRoaXMub3B0aW9ucy5maW5kKGZ1bmN0aW9uIChvcHRpb24pIHsKICAgICAgICByZXR1cm4gb3B0aW9uLnZhbHVlID09PSB2YWx1ZTsKICAgICAgfSk7CgogICAgICBpZiAob3B0aW9uID09IHVuZGVmaW5lZCB8fCAhb3B0aW9uLmNhbkFjY2VzcykgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNTZWxlY3RlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNTZWxlY3RlZCh2YWx1ZSkgewogICAgICByZXR1cm4gdGhpcy52YWx1ZSA9PT0gdmFsdWU7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2FuQWNjZXNzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5yZXF1aXJlbWVudC5pc0NvbXBsZXRlZDsKICAgIH0KICB9XSk7CgogIHJldHVybiBTZXR0aW5nOwp9KCk7"},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\Setting.ts"],"names":[],"mappings":";;;;AAEA,SAAQ,aAAR,QAA4B,2CAA5B;AAIA,WAAsB,OAAtB;AASI,mBAAsB,EAAtB,EAAqC,WAArC,EAA0D,OAA1D,EAAuF,YAAvF,EAAsJ;AAAA,QAA9C,WAA8C,uEAAnB,IAAI,aAAJ,EAAmB;;AAAA;;AAClJ,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,YAAL,GAAoB,YAApB;AAEA,SAAK,KAAL,GAAa,YAAb;AAEA,SAAK,WAAL,GAAmB,WAAnB;AACH;;AAlBL;AAAA;AAAA,WAoBI,aAAI,KAAJ,EAAY;AACR,UAAI,CAAC,KAAK,SAAV,EAAqB;AACjB;AACH;;AACD,UAAI,KAAK,UAAL,CAAgB,KAAhB,CAAJ,EAA4B;AACxB,aAAK,KAAL,GAAa,KAAb;AACH,OAFD,MAEO;AACH,QAAA,OAAO,CAAC,IAAR,WAAgB,KAAhB,+CAA0D,KAAK,EAA/D;AACH;AACJ;AA7BL;AAAA;AAAA,WA+BI,oBAAW,KAAX,EAAmB;AACf,UAAM,MAAM,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAC,MAAD;AAAA,eAAY,MAAM,CAAC,KAAP,KAAiB,KAA7B;AAAA,OAAlB,CAAf;;AACA,UAAI,MAAM,IAAI,SAAV,IAAuB,CAAC,MAAM,CAAC,SAAnC,EAA8C;AAC1C,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH;AArCL;AAAA;AAAA,WAuCI,oBAAW,KAAX,EAAmB;AACf,aAAO,KAAK,KAAL,KAAe,KAAtB;AACH;AAzCL;AAAA;AAAA,SA2CI,eAAa;AACT,aAAO,KAAK,WAAL,CAAiB,WAAxB;AACH;AA7CL;;AAAA;AAAA","sourcesContent":["import {SettingId} from \"@/engine/features/settings/SettingId\";\r\nimport {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {NoRequirement} from \"@/engine/tools/requirements/NoRequirement\";\r\nimport {SettingOption} from \"@/engine/features/settings/SettingOption\";\r\n\r\n\r\nexport abstract class Setting<T> {\r\n    id: SettingId;\r\n    displayName: string;\r\n    options: SettingOption<T>[];\r\n    defaultValue: T;\r\n    value: T;\r\n\r\n    requirement: Requirement;\r\n\r\n    protected constructor(id: SettingId, displayName: string, options: SettingOption<T>[], defaultValue: T, requirement: Requirement = new NoRequirement()) {\r\n        this.id = id;\r\n        this.displayName = displayName;\r\n        this.options = options;\r\n        this.defaultValue = defaultValue;\r\n\r\n        this.value = defaultValue;\r\n\r\n        this.requirement = requirement;\r\n    }\r\n\r\n    set(value: T): void {\r\n        if (!this.canAccess) {\r\n            return;\r\n        }\r\n        if (this.validValue(value)) {\r\n            this.value = value;\r\n        } else {\r\n            console.warn(`${value} is not a valid value for setting ${this.id}. It could be that the option is not yet unlocked.`);\r\n        }\r\n    }\r\n\r\n    validValue(value: T): boolean {\r\n        const option = this.options.find((option) => option.value === value);\r\n        if (option == undefined || !option.canAccess) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isSelected(value: T): boolean {\r\n        return this.value === value;\r\n    }\r\n\r\n    get canAccess(): boolean {\r\n        return this.requirement.isCompleted\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}]}