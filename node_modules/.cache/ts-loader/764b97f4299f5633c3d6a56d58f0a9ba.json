{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--15-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\BooleanSetting.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\BooleanSetting.ts","mtime":1655073405503},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkM6L1VzZXJzL0xlZS9Eb2N1bWVudHMvR2l0SHViL2luY3JlbWVudGFsLWhlbGwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlci5qcyI7CmltcG9ydCB7IFNldHRpbmcgfSBmcm9tICJAL2VuZ2luZS9mZWF0dXJlcy9zZXR0aW5ncy9TZXR0aW5nIjsKaW1wb3J0IHsgU2V0dGluZ09wdGlvbiB9IGZyb20gIkAvZW5naW5lL2ZlYXR1cmVzL3NldHRpbmdzL1NldHRpbmdPcHRpb24iOwovKioNCiAqIEEgc2V0dGluZyB0aGF0IGNhbiBvbmx5IGJlIG9uIG9yIG9mZi4NCiAqIFRoZSBvcHRpb25zIGNhbid0IGhhdmUgcmVxdWlyZW1lbnRzIGJ1dCB0aGlzIGNhbiBiZSBzb2x2ZWQgYnkgdXNpbmcgdGhlIGNvcnJlY3QgZGVmYXVsdFZhbHVlIGFuZCByZXF1aXJlbWVudC4NCiAqLwoKZXhwb3J0IHZhciBCb29sZWFuU2V0dGluZyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1NldHRpbmcpIHsKICBfaW5oZXJpdHMoQm9vbGVhblNldHRpbmcsIF9TZXR0aW5nKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihCb29sZWFuU2V0dGluZyk7CgogIGZ1bmN0aW9uIEJvb2xlYW5TZXR0aW5nKGlkLCBkaXNwbGF5TmFtZSwgZGVmYXVsdFZhbHVlLCByZXF1aXJlbWVudCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJvb2xlYW5TZXR0aW5nKTsKCiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgaWQsIGRpc3BsYXlOYW1lLCBbbmV3IFNldHRpbmdPcHRpb24oIk9uIiwgdHJ1ZSksIG5ldyBTZXR0aW5nT3B0aW9uKCJPZmYiLCBmYWxzZSldLCBkZWZhdWx0VmFsdWUsIHJlcXVpcmVtZW50KTsKICB9CgogIF9jcmVhdGVDbGFzcyhCb29sZWFuU2V0dGluZywgW3sKICAgIGtleTogInRvZ2dsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlKCkgewogICAgICB0aGlzLnZhbHVlID0gIXRoaXMudmFsdWU7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQm9vbGVhblNldHRpbmc7Cn0oU2V0dGluZyk7"},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\settings\\BooleanSetting.ts"],"names":[],"mappings":";;;;AAAA,SAAQ,OAAR,QAAsB,oCAAtB;AAGA,SAAQ,aAAR,QAA4B,0CAA5B;AAEA;;;AAGG;;AACH,WAAa,cAAb;EAAA;;EAAA;;EAEI,wBAAY,EAAZ,EAA2B,WAA3B,EAAgD,YAAhD,EAAuE,WAAvE,EAAgG;IAAA;;IAAA,yBACtF,EADsF,EAClF,WADkF,EACrE,CACnB,IAAI,aAAJ,CAA2B,IAA3B,EAAiC,IAAjC,CADmB,EAEnB,IAAI,aAAJ,CAA2B,KAA3B,EAAkC,KAAlC,CAFmB,CADqE,EAIzF,YAJyF,EAI3E,WAJ2E;EAK/F;;EAPL;IAAA;IAAA,OASW,kBAAM;MACT,KAAK,KAAL,GAAa,CAAC,KAAK,KAAnB;IACH;EAXL;;EAAA;AAAA,EAAoC,OAApC","sourcesContent":["import {Setting} from \"@/engine/features/settings/Setting\";\r\nimport {SettingId} from \"@/engine/features/settings/SettingId\";\r\nimport {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {SettingOption} from \"@/engine/features/settings/SettingOption\";\r\n\r\n/**\r\n * A setting that can only be on or off.\r\n * The options can't have requirements but this can be solved by using the correct defaultValue and requirement.\r\n */\r\nexport class BooleanSetting extends Setting<boolean> {\r\n\r\n    constructor(id: SettingId, displayName: string, defaultValue: boolean, requirement?: Requirement) {\r\n        super(id, displayName, [\r\n            new SettingOption<boolean>(\"On\", true),\r\n            new SettingOption<boolean>(\"Off\", false)\r\n        ], defaultValue, requirement);\r\n    }\r\n\r\n    public toggle(): void {\r\n        this.value = !this.value;\r\n    }\r\n}\r\n"],"sourceRoot":""}]}