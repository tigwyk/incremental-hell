{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\achievements\\Achievements.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\achievements\\Achievements.ts","mtime":1655075192153},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0xlZS9Eb2N1bWVudHMvR2l0SHViL2luY3JlbWVudGFsLWhlbGwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkM6L1VzZXJzL0xlZS9Eb2N1bWVudHMvR2l0SHViL2luY3JlbWVudGFsLWhlbGwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIkM6L1VzZXJzL0xlZS9Eb2N1bWVudHMvR2l0SHViL2luY3JlbWVudGFsLWhlbGwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IEFjaGlldmVtZW50IH0gZnJvbSAiQC9lbmdpbmUvZmVhdHVyZXMvYWNoaWV2ZW1lbnRzL0FjaGlldmVtZW50IjsKaW1wb3J0IHsgQWNoaWV2ZW1lbnRJZCB9IGZyb20gIkAvZW5naW5lL2ZlYXR1cmVzL2FjaGlldmVtZW50cy9BY2hpZXZlbWVudElkIjsKaW1wb3J0IHsgRmVhdHVyZSB9IGZyb20gIkAvZW5naW5lL2ZlYXR1cmVzL0ZlYXR1cmUiOwppbXBvcnQgeyBBY2hpZXZlbWVudHNTYXZlRGF0YSB9IGZyb20gIkAvZW5naW5lL2ZlYXR1cmVzL2FjaGlldmVtZW50cy9BY2hpZXZlbWVudFNhdmVEYXRhIjsKaW1wb3J0IHsgU3RhdGlzdGljSWQgfSBmcm9tICJAL2VuZ2luZS9mZWF0dXJlcy9zdGF0aXN0aWNzL1N0YXRpc3RpY0lkIjsKaW1wb3J0IHsgU2ltcGxlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAic3Ryb25nbHktdHlwZWQtZXZlbnRzIjsKaW1wb3J0IHsgQ3VzdG9tQWNoaWV2ZW1lbnQgfSBmcm9tICJAL2VuZ2luZS9mZWF0dXJlcy9hY2hpZXZlbWVudHMvQ3VzdG9tQWNoaWV2ZW1lbnQiOwppbXBvcnQgeyBOdW1iZXJTdGF0aXN0aWNSZXF1aXJlbWVudCB9IGZyb20gIkAvZW5naW5lL2ZlYXR1cmVzL3N0YXRpc3RpY3MvcmVxdWlyZW1lbnRzL051bWJlclN0YXRpc3RpY1JlcXVpcmVtZW50IjsKZXhwb3J0IHZhciBBY2hpZXZlbWVudHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9GZWF0dXJlKSB7CiAgX2luaGVyaXRzKEFjaGlldmVtZW50cywgX0ZlYXR1cmUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEFjaGlldmVtZW50cyk7CgogIGZ1bmN0aW9uIEFjaGlldmVtZW50cygpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWNoaWV2ZW1lbnRzKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsICdhY2hpZXZlbWVudHMnKTsKICAgIF90aGlzLm5hbWUgPSAiQWNoaWV2ZW1lbnRzIjsKICAgIF90aGlzLnNhdmVLZXkgPSAnYWNoaWV2ZW1lbnRzJzsgLy8gRGVsYXkgYmV0d2VlbiBjaGVja2luZyBmb3IgYWNoaWV2ZW1lbnRzCgogICAgX3RoaXMuQUNISUVWRU1FTlRfQ0hFQ0tfVElNRSA9IDIuMDsKICAgIF90aGlzLmNoZWNrQ291bnRlciA9IDA7CiAgICBfdGhpcy5fb25VbmxvY2sgPSBuZXcgU2ltcGxlRXZlbnREaXNwYXRjaGVyKCk7CiAgICBfdGhpcy5saXN0ID0ge307CiAgICByZXR1cm4gX3RoaXM7CiAgfQogIC8qKg0KICAgKiBFbWl0dGVkIHdoZW5ldmVyIGFuIGFjaGlldmVtZW50IGlzIHVubG9ja2VkLg0KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhBY2hpZXZlbWVudHMsIFt7CiAgICBrZXk6ICJvblVubG9jayIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX29uVW5sb2NrLmFzRXZlbnQoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJpbml0aWFsaXplIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0aWFsaXplKGZlYXR1cmVzKSB7CiAgICAgIHRoaXMucmVnaXN0ZXJBY2hpZXZlbWVudChuZXcgQ3VzdG9tQWNoaWV2ZW1lbnQoQWNoaWV2ZW1lbnRJZC5BdExlYXN0T25lU3VwZXJQb3dlciwgIkkgd29uZGVyIHdoYXQgaW5zcGlyZWQgdGhpcyBmZWF0dXJlIiwgJ0dvIG9uIGFuIEFkdmVudHVyZSB3aXRoIGF0IGxlYXN0IG9uZSBib251cycsICdjYXJkcy9oYXRjaGV0LWJyb256ZS5zdmcnKSk7CiAgICAgIHRoaXMucmVnaXN0ZXJBY2hpZXZlbWVudChuZXcgQWNoaWV2ZW1lbnQoQWNoaWV2ZW1lbnRJZC5Ub3RhbE1vbmV5MTAwLCAiSXQncyBzb21ldGhpbmciLCAnR2FpbiAxMDAgbW9uZXkgaW4gdG90YWwnLCAnY29pbnMuc3ZnJywgbmV3IE51bWJlclN0YXRpc3RpY1JlcXVpcmVtZW50KGZlYXR1cmVzLnN0YXRpc3RpY3MuZ2V0U3RhdGlzdGljKFN0YXRpc3RpY0lkLlRvdGFsTW9uZXlHYWluZWQpLCAxMDApKSk7CiAgICAgIHRoaXMucmVnaXN0ZXJBY2hpZXZlbWVudChuZXcgQWNoaWV2ZW1lbnQoQWNoaWV2ZW1lbnRJZC5Ub3RhbE1vbmV5MTAwMCwgIkl0J3MgYSBiaXQgbW9yZSIsICdHYWluIDEwMDAgbW9uZXkgaW4gdG90YWwnLCAnY29pbnMuc3ZnJywgbmV3IE51bWJlclN0YXRpc3RpY1JlcXVpcmVtZW50KGZlYXR1cmVzLnN0YXRpc3RpY3MuZ2V0U3RhdGlzdGljKFN0YXRpc3RpY0lkLlRvdGFsTW9uZXlHYWluZWQpLCAxMDAwKSkpOwogICAgICB0aGlzLnJlZ2lzdGVyQWNoaWV2ZW1lbnQobmV3IEFjaGlldmVtZW50KEFjaGlldmVtZW50SWQuVG90YWxNb25leTEwMDAwLCAiVGhpcyBpcyB3aGVyZSB0aGUgZnVuIGJlZ2lucyIsICdHYWluIDEwMDAwIG1vbmV5IGluIHRvdGFsJywgJ2NvaW5zLnN2ZycsIG5ldyBOdW1iZXJTdGF0aXN0aWNSZXF1aXJlbWVudChmZWF0dXJlcy5zdGF0aXN0aWNzLmdldFN0YXRpc3RpYyhTdGF0aXN0aWNJZC5Ub3RhbE1vbmV5R2FpbmVkKSwgMTAwMDApKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAidXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoZGVsdGEpIHsKICAgICAgdGhpcy5jaGVja0NvdW50ZXIgKz0gZGVsdGE7CgogICAgICBpZiAodGhpcy5jaGVja0NvdW50ZXIgPj0gdGhpcy5BQ0hJRVZFTUVOVF9DSEVDS19USU1FKSB7CiAgICAgICAgdGhpcy5jaGVja0ZvckFjaGlldmVtZW50c0NvbXBsZXRlZCgpOwogICAgICAgIHRoaXMuY2hlY2tDb3VudGVyID0gMDsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImNoZWNrRm9yQWNoaWV2ZW1lbnRzQ29tcGxldGVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVja0ZvckFjaGlldmVtZW50c0NvbXBsZXRlZCgpIHsKICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMubGlzdCkgewogICAgICAgIHZhciBhY2hpZXZlbWVudCA9IHRoaXMubGlzdFtrZXldOwoKICAgICAgICBpZiAoYWNoaWV2ZW1lbnQucmVxdWlyZW1lbnRzQ29tcGxldGVkKCkpIHsKICAgICAgICAgIHZhciBpc0p1c3RVbmxvY2tlZCA9IGFjaGlldmVtZW50LnVubG9jaygpOwoKICAgICAgICAgIGlmIChpc0p1c3RVbmxvY2tlZCkgewogICAgICAgICAgICB0aGlzLl9vblVubG9jay5kaXNwYXRjaChhY2hpZXZlbWVudCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAicmVnaXN0ZXJBY2hpZXZlbWVudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVnaXN0ZXJBY2hpZXZlbWVudChhY2hpZXZlbWVudCkgewogICAgICB0aGlzLmxpc3RbYWNoaWV2ZW1lbnQua2V5XSA9IGFjaGlldmVtZW50OwogICAgfQogIH0sIHsKICAgIGtleTogImdldEFjaGlldmVtZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRBY2hpZXZlbWVudChrZXkpIHsKICAgICAgaWYgKCF0aGlzLmhhc0FjaGlldmVtZW50KGtleSkpIHsKICAgICAgICBjb25zb2xlLndhcm4oIkNvdWxkIG5vdCBmaW5kIGFjaGlldmVtZW50IHdpdGgga2V5ICIuY29uY2F0KGtleSkpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLmxpc3Rba2V5XTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImhhc0FjaGlldmVtZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNBY2hpZXZlbWVudChrZXkpIHsKICAgICAgcmV0dXJuIGtleSBpbiB0aGlzLmxpc3Q7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9hZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZChkYXRhKSB7CiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihkYXRhLmxpc3QpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIga2V5ID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICB2YXIgYWNoaWV2ZW1lbnQgPSB0aGlzLmdldEFjaGlldmVtZW50KGtleSk7CgogICAgICAgICAgaWYgKGFjaGlldmVtZW50ICE9PSBudWxsKSB7CiAgICAgICAgICAgIGFjaGlldmVtZW50LnVubG9ja2VkID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInNhdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNhdmUoKSB7CiAgICAgIHZhciBkYXRhID0gbmV3IEFjaGlldmVtZW50c1NhdmVEYXRhKCk7CgogICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5saXN0KSB7CiAgICAgICAgaWYgKHRoaXMubGlzdFtrZXldLnVubG9ja2VkKSB7CiAgICAgICAgICBkYXRhLmFkZEFjaGlldmVtZW50KGtleSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gZGF0YTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBY2hpZXZlbWVudHM7Cn0oRmVhdHVyZSk7"},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\achievements\\Achievements.ts"],"names":[],"mappings":"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","sourcesContent":["import {Achievement} from \"@/engine/features/achievements/Achievement\";\r\nimport {AchievementId} from \"@/engine/features/achievements/AchievementId\";\r\nimport {Feature} from \"@/engine/features/Feature\";\r\nimport {AchievementsSaveData} from \"@/engine/features/achievements/AchievementSaveData\";\r\nimport {Features} from \"@/engine/Features\";\r\nimport {ArrayStatisticRequirement} from \"@/engine/features/statistics/requirements/ArrayStatisticRequirement\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\nimport {ArrayStatistic} from \"@/engine/features/statistics/ArrayStatistic\";\r\nimport {ISimpleEvent, SimpleEventDispatcher} from \"strongly-typed-events\";\r\nimport {CustomAchievement} from \"@/engine/features/achievements/CustomAchievement\";\r\nimport {NumberStatisticRequirement} from \"@/engine/features/statistics/requirements/NumberStatisticRequirement\";\r\nimport {NumberStatistic} from \"@/engine/features/statistics/NumberStatistic\";\r\n\r\nexport class Achievements extends Feature {\r\n    name: string = \"Achievements\";\r\n    saveKey: string = 'achievements';\r\n\r\n    list: Record<AchievementId, Achievement>\r\n\r\n    // Delay between checking for achievements\r\n    private readonly ACHIEVEMENT_CHECK_TIME: number = 2.0;\r\n    private checkCounter: number = 0;\r\n\r\n    private _onUnlock = new SimpleEventDispatcher<Achievement>();\r\n\r\n    /**\r\n     * Emitted whenever an achievement is unlocked.\r\n     */\r\n    public get onUnlock(): ISimpleEvent<Achievement> {\r\n        return this._onUnlock.asEvent();\r\n    }\r\n\r\n    constructor() {\r\n        super('achievements');\r\n        this.list = {} as Record<AchievementId, Achievement>;\r\n    }\r\n\r\n    initialize(features: Features): void {\r\n        this.registerAchievement(\r\n            new CustomAchievement(AchievementId.AtLeastOneSuperPower,\r\n                \"I wonder what inspired this feature\",\r\n                'Go on an Adventure with at least one bonus',\r\n                'cards/hatchet-bronze.svg',\r\n            )\r\n        );\r\n        this.registerAchievement(\r\n            new Achievement(AchievementId.TotalMoney100,\r\n                \"It's something\",\r\n                'Gain 100 money in total',\r\n                'coins.svg',\r\n                new NumberStatisticRequirement(features.statistics.getStatistic(StatisticId.TotalMoneyGained) as NumberStatistic, 100),\r\n            ),\r\n        );\r\n        this.registerAchievement(\r\n            new Achievement(AchievementId.TotalMoney1000,\r\n                \"It's a bit more\",\r\n                'Gain 1000 money in total',\r\n                'coins.svg',\r\n                new NumberStatisticRequirement(features.statistics.getStatistic(StatisticId.TotalMoneyGained) as NumberStatistic, 1000),\r\n            ),\r\n        );\r\n        this.registerAchievement(\r\n            new Achievement(AchievementId.TotalMoney10000,\r\n                \"This is where the fun begins\",\r\n                'Gain 10000 money in total',\r\n                'coins.svg',\r\n                new NumberStatisticRequirement(features.statistics.getStatistic(StatisticId.TotalMoneyGained) as NumberStatistic, 10000),\r\n            ),\r\n        );\r\n    }\r\n\r\n    update(delta: number) {\r\n        this.checkCounter += delta;\r\n        if (this.checkCounter >= this.ACHIEVEMENT_CHECK_TIME) {\r\n            this.checkForAchievementsCompleted();\r\n            this.checkCounter = 0;\r\n        }\r\n    }\r\n\r\n    public checkForAchievementsCompleted() {\r\n        for (const key in this.list) {\r\n            const achievement = this.list[key as AchievementId];\r\n            if (achievement.requirementsCompleted()) {\r\n                const isJustUnlocked = achievement.unlock();\r\n                if (isJustUnlocked) {\r\n                    this._onUnlock.dispatch(achievement);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerAchievement(achievement: Achievement) {\r\n        this.list[achievement.key] = achievement;\r\n    }\r\n\r\n    public getAchievement(key: AchievementId): Achievement | null {\r\n        if (!this.hasAchievement(key)) {\r\n            console.warn(`Could not find achievement with key ${key}`)\r\n\r\n            return null;\r\n        } else {\r\n            return this.list[key];\r\n        }\r\n    }\r\n\r\n    private hasAchievement(key: AchievementId): boolean {\r\n        return key in this.list\r\n    }\r\n\r\n\r\n    load(data: AchievementsSaveData): void {\r\n        for (const key of data.list) {\r\n            const achievement = this.getAchievement(key);\r\n            if (achievement !== null) {\r\n                achievement.unlocked = true\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    save(): AchievementsSaveData {\r\n        const data = new AchievementsSaveData();\r\n        for (const key in this.list) {\r\n            if (this.list[key as AchievementId].unlocked) {\r\n                data.addAchievement(key as AchievementId);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n}"],"sourceRoot":""}]}