{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\wallet\\Currency.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\wallet\\Currency.ts","mtime":1655061318162},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwoKLyoqDQogKiBBIGNsYXNzIHRvIHN0b3JlIGN1cnJlbmN5IGFtb3VudHMNCiAqLwpleHBvcnQgdmFyIEN1cnJlbmN5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBDdXJyZW5jeShhbW91bnQsIHR5cGUpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDdXJyZW5jeSk7CgogICAgdGhpcy5hbW91bnQgPSBhbW91bnQ7CiAgICB0aGlzLnR5cGUgPSB0eXBlOwogIH0KICAvKioNCiAgICogV2hldGhlciBvciBub3QgdGhpcyBjdXJyZW5jeSBpcyB2YWxpZC4gWW91ciBnYW1lIGNhbiBoYXZlIGRpZmZlcmVudCBydWxlcw0KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhDdXJyZW5jeSwgW3sKICAgIGtleTogImlzVmFsaWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzVmFsaWQoKSB7CiAgICAgIGlmIChpc05hTih0aGlzLmFtb3VudCkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmFtb3VudCA+PSAwOwogICAgfQogIH0sIHsKICAgIGtleTogInRvU3RyaW5nIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB0b1N0cmluZygpIHsKICAgICAgcmV0dXJuICIiLmNvbmNhdCh0aGlzLmFtb3VudCwgIiAiKS5jb25jYXQodGhpcy50eXBlKTsKICAgIH0gLy8gTWF0aCBtZXRob2RzIGFzIFRTIGRvZXMgbm90IHN1cHBvcnQgb3BlcmF0b3Igb3ZlcmxvYWRpbmcKCiAgfSwgewogICAga2V5OiAiYWRkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhZGQoYW1vdW50KSB7CiAgICAgIHRoaXMuYW1vdW50ICs9IGFtb3VudDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzdWJ0cmFjdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc3VidHJhY3QoYW1vdW50KSB7CiAgICAgIHRoaXMuYW1vdW50IC09IGFtb3VudDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtdWx0aXBseSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbXVsdGlwbHkoYW1vdW50KSB7CiAgICAgIHRoaXMuYW1vdW50ICo9IGFtb3VudDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkaXZpZGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRpdmlkZShhbW91bnQpIHsKICAgICAgaWYgKGFtb3VudCA9PT0gMCkgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIkNhbm5vdCBkaXZpZGUgIi5jb25jYXQodGhpcywgIiBieSAwIikpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5hbW91bnQgLz0gYW1vdW50OwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEN1cnJlbmN5Owp9KCk7"},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\wallet\\Currency.ts"],"names":[],"mappings":";;;;AAEA;;AAEG;AACH,WAAa,QAAb;AAII,oBAAY,MAAZ,EAA4B,IAA5B,EAA8C;AAAA;;AAC1C,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,IAAL,GAAY,IAAZ;AACH;AAED;;AAEG;;;AAXP;AAAA;AAAA,WAYW,mBAAO;AACV,UAAI,KAAK,CAAC,KAAK,MAAN,CAAT,EAAwB;AACpB,eAAO,KAAP;AACH;;AACD,aAAO,KAAK,MAAL,IAAe,CAAtB;AACH;AAjBL;AAAA;AAAA,WAmBW,oBAAQ;AACX,uBAAU,KAAK,MAAf,cAAyB,KAAK,IAA9B;AACH,KArBL,CAuBI;;AAvBJ;AAAA;AAAA,WAwBW,aAAI,MAAJ,EAAkB;AACrB,WAAK,MAAL,IAAe,MAAf;AACH;AA1BL;AAAA;AAAA,WA4BW,kBAAS,MAAT,EAAuB;AAC1B,WAAK,MAAL,IAAe,MAAf;AACH;AA9BL;AAAA;AAAA,WAgCW,kBAAS,MAAT,EAAuB;AAC1B,WAAK,MAAL,IAAe,MAAf;AACH;AAlCL;AAAA;AAAA,WAoCW,gBAAO,MAAP,EAAqB;AACxB,UAAI,MAAM,KAAK,CAAf,EAAkB;AACd,QAAA,OAAO,CAAC,KAAR,yBAA+B,IAA/B;AACA;AACH;;AACD,WAAK,MAAL,IAAe,MAAf;AACH;AA1CL;;AAAA;AAAA","sourcesContent":["import {CurrencyType} from \"./CurrencyType\";\r\n\r\n/**\r\n * A class to store currency amounts\r\n */\r\nexport class Currency {\r\n    amount: number;\r\n    type: CurrencyType;\r\n\r\n    constructor(amount: number, type: CurrencyType) {\r\n        this.amount = amount;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Whether or not this currency is valid. Your game can have different rules\r\n     */\r\n    public isValid(): boolean {\r\n        if (isNaN(this.amount)) {\r\n            return false;\r\n        }\r\n        return this.amount >= 0;\r\n    }\r\n\r\n    public toString(): string {\r\n        return `${this.amount} ${this.type}`;\r\n    }\r\n\r\n    // Math methods as TS does not support operator overloading\r\n    public add(amount: number) {\r\n        this.amount += amount;\r\n    }\r\n\r\n    public subtract(amount: number) {\r\n        this.amount -= amount;\r\n    }\r\n\r\n    public multiply(amount: number) {\r\n        this.amount *= amount;\r\n    }\r\n\r\n    public divide(amount: number) {\r\n        if (amount === 0) {\r\n            console.error(`Cannot divide ${this} by 0`);\r\n            return;\r\n        }\r\n        this.amount /= amount;\r\n    }\r\n}\r\n"],"sourceRoot":""}]}