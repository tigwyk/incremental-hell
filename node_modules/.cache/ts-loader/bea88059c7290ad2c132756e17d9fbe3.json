{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--15-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\scrap\\ScrapAction.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\scrap\\ScrapAction.ts","mtime":1655097725179},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkM6L1VzZXJzL0xlZS9Eb2N1bWVudHMvR2l0SHViL2luY3JlbWVudGFsLWhlbGwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCB7IFByb2dyZXNzQmFyIH0gZnJvbSAiQC9lbmdpbmUvcHJvZ3Jlc3NiYXJzL1Byb2dyZXNzQmFyIjsKaW1wb3J0IHsgQXBwIH0gZnJvbSAiQC9BcHAiOwppbXBvcnQgeyBNdWx0aVJlcXVpcmVtZW50IH0gZnJvbSAiQC9lbmdpbmUvdG9vbHMvcmVxdWlyZW1lbnRzL011bHRpUmVxdWlyZW1lbnQiOwppbXBvcnQgeyBDdXJyZW5jeVR5cGUgfSBmcm9tICJAL2VuZ2luZS9mZWF0dXJlcy93YWxsZXQvQ3VycmVuY3lUeXBlIjsKaW1wb3J0IHsgQ3VycmVuY3kgfSBmcm9tICJAL2VuZ2luZS9mZWF0dXJlcy93YWxsZXQvQ3VycmVuY3kiOwpleHBvcnQgdmFyIFNjcmFwQWN0aW9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUHJvZ3Jlc3NCYXIpIHsKICBfaW5oZXJpdHMoU2NyYXBBY3Rpb24sIF9Qcm9ncmVzc0Jhcik7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoU2NyYXBBY3Rpb24pOwoKICBmdW5jdGlvbiBTY3JhcEFjdGlvbihkZXNjcmlwdGlvbiwgZ29hbCwgYXV0b21hdGlvblVwZ3JhZGUsIHZhbHVlVXBncmFkZSkgewogICAgdmFyIF90aGlzOwoKICAgIHZhciByZXF1aXJlbWVudHMgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IG5ldyBNdWx0aVJlcXVpcmVtZW50KFtdKTsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2NyYXBBY3Rpb24pOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgZ29hbCwgcmVxdWlyZW1lbnRzKTsKICAgIF90aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247CiAgICBfdGhpcy5hdXRvbWF0aW9uVXBncmFkZSA9IGF1dG9tYXRpb25VcGdyYWRlOwogICAgX3RoaXMudmFsdWVVcGdyYWRlID0gdmFsdWVVcGdyYWRlOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFNjcmFwQWN0aW9uLCBbewogICAga2V5OiAiY2FuUmVwZWF0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjYW5SZXBlYXQoKSB7CiAgICAgIHJldHVybiBBcHAuZ2FtZS5mZWF0dXJlcy5zY3JhcC51cGdyYWRlcy5nZXRVcGdyYWRlKHRoaXMuYXV0b21hdGlvblVwZ3JhZGUpLmlzQm91Z2h0KCk7CiAgICB9CiAgfSwgewogICAga2V5OiAic2NyYXBSZXdhcmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNjcmFwUmV3YXJkKCkgewogICAgICB2YXIgdXBncmFkZSA9IEFwcC5nYW1lLmZlYXR1cmVzLnNjcmFwLnVwZ3JhZGVzLmdldFVwZ3JhZGUodGhpcy52YWx1ZVVwZ3JhZGUpOwogICAgICByZXR1cm4gdXBncmFkZS5nZXRCb251cygpOwogICAgfQogIH0sIHsKICAgIGtleTogImdhaW5SZXdhcmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdhaW5SZXdhcmQoKSB7CiAgICAgIHJldHVybiBBcHAuZ2FtZS5mZWF0dXJlcy53YWxsZXQuZ2FpbkN1cnJlbmN5KG5ldyBDdXJyZW5jeSh0aGlzLnNjcmFwUmV3YXJkKCksIEN1cnJlbmN5VHlwZS5TY3JhcCkpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFNjcmFwQWN0aW9uOwp9KFByb2dyZXNzQmFyKTs="},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\scrap\\ScrapAction.ts"],"names":[],"mappings":";;;;;;AAAA,SAAQ,WAAR,QAA0B,mCAA1B;AACA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,gBAAR,QAA+B,8CAA/B;AAGA,SAAQ,YAAR,QAA2B,uCAA3B;AACA,SAAQ,QAAR,QAAuB,mCAAvB;AAEA,WAAa,WAAb;EAAA;;EAAA;;EAKI,qBAAY,WAAZ,EAAiC,IAAjC,EAA+C,iBAA/C,EAA0E,YAA1E,EAAyJ;IAAA;;IAAA,IAAzD,YAAyD,uEAAxB,IAAI,gBAAJ,CAAqB,EAArB,CAAwB;;IAAA;;IACrJ,0BAAM,IAAN,EAAY,YAAZ;IACA,MAAK,WAAL,GAAmB,WAAnB;IACA,MAAK,iBAAL,GAAyB,iBAAzB;IACA,MAAK,YAAL,GAAoB,YAApB;IAJqJ;EAKxJ;;EAVL;IAAA;IAAA,OAYI,qBAAS;MACL,OAAQ,GAAG,CAAC,IAAJ,CAAS,QAAT,CAAkB,KAAlB,CAAwB,QAAxB,CAAiC,UAAjC,CAA4C,KAAK,iBAAjD,EAA2F,QAA3F,EAAR;IACH;EAdL;IAAA;IAAA,OAgBI,uBAAW;MACP,IAAM,OAAO,GAAI,GAAG,CAAC,IAAJ,CAAS,QAAT,CAAkB,KAAlB,CAAwB,QAAxB,CAAiC,UAAjC,CAA4C,KAAK,YAAjD,CAAjB;MACA,OAAO,OAAO,CAAC,QAAR,EAAP;IACH;EAnBL;IAAA;IAAA,OAqBI,sBAAU;MACN,OAAO,GAAG,CAAC,IAAJ,CAAS,QAAT,CAAkB,MAAlB,CAAyB,YAAzB,CAAsC,IAAI,QAAJ,CAAa,KAAK,WAAL,EAAb,EAAiC,YAAY,CAAC,KAA9C,CAAtC,CAAP;IAEH;EAxBL;;EAAA;AAAA,EAAiC,WAAjC","sourcesContent":["import {ProgressBar} from \"@/engine/progressbars/ProgressBar\";\r\nimport {App} from \"@/App\";\r\nimport {MultiRequirement} from \"@/engine/tools/requirements/MultiRequirement\";\r\nimport {SingleLevelUpgrade} from \"@/engine/features/upgrades/SingleLevelUpgrade\";\r\nimport {DiscreteUpgrade} from \"@/engine/features/upgrades/DiscreteUpgrade\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\n\r\nexport class ScrapAction extends ProgressBar {\r\n    description: string;\r\n    automationUpgrade: string;\r\n    valueUpgrade: string;\r\n\r\n    constructor(description: string, goal: number, automationUpgrade: string, valueUpgrade: string, requirements: MultiRequirement = new MultiRequirement([])) {\r\n        super(goal, requirements);\r\n        this.description = description;\r\n        this.automationUpgrade = automationUpgrade;\r\n        this.valueUpgrade = valueUpgrade\r\n    }\r\n\r\n    canRepeat(): boolean {\r\n        return (App.game.features.scrap.upgrades.getUpgrade(this.automationUpgrade) as SingleLevelUpgrade).isBought();\r\n    }\r\n\r\n    scrapReward(): number {\r\n        const upgrade = (App.game.features.scrap.upgrades.getUpgrade(this.valueUpgrade) as DiscreteUpgrade);\r\n        return upgrade.getBonus();\r\n    }\r\n\r\n    gainReward(): void {\r\n        return App.game.features.wallet.gainCurrency(new Currency(this.scrapReward(), CurrencyType.Scrap));\r\n\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}]}