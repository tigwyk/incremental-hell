{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\Game.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\Game.ts","mtime":1655094853930},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\Game.ts"],"names":[],"mappings":"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","sourcesContent":["import {GameState} from \"./GameState\";\r\nimport {LocalStorage} from \"@/engine/tools/saving/LocalStorage\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Features} from \"@/engine/Features\";\r\nimport {Feature} from \"@/engine/features/Feature\";\r\nimport {DeveloperPanel} from \"@/engine/developer-panel/DeveloperPanel\";\r\nimport {DeveloperPanelTab} from \"@/engine/developer-panel/DeveloperPanelTab\";\r\nimport {FunctionField} from \"@/engine/developer-panel/fields/FunctionField\";\r\nimport {DisplayField} from \"@/engine/developer-panel/fields/DisplayField\";\r\nimport {ChoiceField} from \"@/engine/developer-panel/fields/ChoiceField\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {ISignal, ISimpleEvent, SignalDispatcher, SimpleEventDispatcher} from \"strongly-typed-events\";\r\n\r\nexport class Game {\r\n    private _tickInterval: number = -1;\r\n\r\n    /**\r\n     * Object with registered features. If you want them as a list use this.featureList\r\n     */\r\n    public readonly features: Features;\r\n\r\n    public state: GameState;\r\n\r\n\r\n    protected readonly TICK_DURATION: number = 0.1;\r\n    private readonly SAVE_INTERVAL = 30;\r\n    private _nextSave = this.SAVE_INTERVAL;\r\n\r\n    private gameSpeed = 1;\r\n    private _lastUpdate: number = 0;\r\n\r\n    /**\r\n     * Emitted whenever the game saves\r\n     */\r\n    private _onSave = new SignalDispatcher();\r\n\r\n    public get onSave(): ISignal {\r\n        return this._onSave.asEvent();\r\n    }\r\n\r\n    /**\r\n     * Make sure this key is unique to your game.\r\n     * Otherwise you might run into loading conflicts when multiple games are hosted on the same domain (such as <username.github.io/game)\r\n     */\r\n    protected readonly SAVE_KEY: string = \"incremental-hell\";\r\n\r\n    constructor(features: Features) {\r\n        this.features = features;\r\n\r\n        this.state = GameState.Launching;\r\n    }\r\n\r\n    public getDeveloperPanel(): DeveloperPanel {\r\n        // Start with play buttons for the game\r\n        const tabs: DeveloperPanelTab[] = [\r\n            new DeveloperPanelTab('Game', [\r\n                new DisplayField('state', 'State').setObject(this),\r\n                new ChoiceField('gameSpeed', [\r\n                    ['0.5x', 0.5],\r\n                    ['1x', 1],\r\n                    ['2x', 2],\r\n                    ['4x', 4],\r\n                ], 'Game speed').setObject(this),\r\n                new FunctionField(() => {\r\n                    this.start()\r\n                }, 'Start').setCssClass('btn-green'),\r\n                new FunctionField(() => {\r\n                    this.pause()\r\n                }, 'Pause').setCssClass('btn-blue'),\r\n                new FunctionField(() => {\r\n                    this.resume()\r\n                }, 'Resume').setCssClass('btn-green'),\r\n                new FunctionField(() => {\r\n                    this.stop()\r\n                }, 'Stop').setCssClass('btn-red'),\r\n            ]),\r\n\r\n        ];\r\n\r\n\r\n        for (const feature of this.featureList) {\r\n            const fields = feature.getDeveloperPanelFields();\r\n\r\n            // Inject the feature into the resource.\r\n            for (const field of fields) {\r\n                field.setObject(feature);\r\n            }\r\n\r\n            const tab = new DeveloperPanelTab(feature.saveKey, fields)\r\n            if (!tab.isEmpty()) {\r\n                tabs.push(tab)\r\n            }\r\n        }\r\n        return new DeveloperPanel(tabs);\r\n    }\r\n\r\n    /**\r\n     * Update all features\r\n     */\r\n    public update(): void {\r\n        const now = new Date().getTime() / 1000;\r\n        const timeDifference = now - this._lastUpdate;\r\n\r\n        if (this.state != GameState.Playing) {\r\n            return;\r\n        }\r\n\r\n        const delta = timeDifference * this.gameSpeed;\r\n        for (const feature of this.featureList) {\r\n            feature.update(delta)\r\n        }\r\n\r\n        this._lastUpdate = now;\r\n        this._nextSave -= delta;\r\n        if (this._nextSave <= 0) {\r\n            this.save();\r\n            this._nextSave = this.SAVE_INTERVAL;\r\n        }\r\n    }\r\n\r\n    public getTotalCurrencyMultiplier(type: CurrencyType): number {\r\n        let multiplier = 1;\r\n        for (const feature of this.featureList) {\r\n            multiplier *= feature.getTotalCurrencyMultiplier(type);\r\n        }\r\n        return multiplier;\r\n    }\r\n\r\n    /**\r\n     * Initialize all features\r\n     */\r\n    public initialize(): void {\r\n        for (const feature of this.featureList) {\r\n            feature.initialize(this.features);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Start the main update loop\r\n     */\r\n    public start(): void {\r\n        if (this.state !== GameState.Stopped && this.state !== GameState.Launching) {\r\n            this.printStateWarning(\"Cannot start the game twice.\");\r\n            return;\r\n        }\r\n\r\n        for (const feature of this.featureList) {\r\n            feature.start();\r\n        }\r\n\r\n        this._lastUpdate = new Date().getTime() / 1000;\r\n        this._tickInterval = setInterval(() => this.update(), this.TICK_DURATION * 1000);\r\n\r\n        this.state = GameState.Playing;\r\n        console.debug(\"Game Started\");\r\n    }\r\n\r\n    public pause(): void {\r\n        if (this.state !== GameState.Playing) {\r\n            this.printStateWarning(\"Cannot pause the game if we're not playing.\");\r\n            return;\r\n        }\r\n        clearInterval(this._tickInterval);\r\n\r\n        this.state = GameState.Paused;\r\n        console.debug(\"Game Paused\");\r\n    }\r\n\r\n\r\n    public resume(): void {\r\n        if (this.state !== GameState.Paused) {\r\n            this.printStateWarning(\"Cannot resume the game if we're not paused.\");\r\n            return;\r\n        }\r\n\r\n        this._lastUpdate = new Date().getTime() / 1000;\r\n        // this._tickInterval = setInterval(() => this.update(), this.TICK_DURATION * 1000);\r\n\r\n        this.state = GameState.Playing;\r\n        console.debug(\"Game Resumed\");\r\n    }\r\n\r\n    /**\r\n     * Stop the main update loop\r\n     */\r\n    public stop(): void {\r\n        if (this.state === GameState.Stopped) {\r\n            this.printStateWarning(\"Cannot stop the game if we're already stopped.\");\r\n            return;\r\n        }\r\n        clearInterval(this._tickInterval);\r\n\r\n        for (const feature of this.featureList) {\r\n            feature.stop();\r\n        }\r\n\r\n        this.state = GameState.Stopped;\r\n        console.debug(\"Stopped\");\r\n    }\r\n\r\n    /**\r\n     * Recursively save all registered features\r\n     */\r\n    public save(): void {\r\n        const res: Record<string, unknown> = {};\r\n        for (const feature of this.featureList) {\r\n            res[feature.saveKey] = feature.save()\r\n        }\r\n        LocalStorage.store(this.SAVE_KEY, res)\r\n        this._onSave.dispatch();\r\n    }\r\n\r\n    /**\r\n     * Delete the locally stored save\r\n     */\r\n    public deleteSave(): void {\r\n        LocalStorage.delete(this.SAVE_KEY);\r\n    }\r\n\r\n    /**\r\n     * Recursively load all registered features\r\n     */\r\n    public load(): void {\r\n        const saveData = LocalStorage.get(this.SAVE_KEY)\r\n        if (saveData == null) {\r\n            return;\r\n        }\r\n        for (const feature of this.featureList) {\r\n            const featureSaveData: Record<string, unknown> = saveData[feature.saveKey] as Record<string, unknown>;\r\n            if (featureSaveData == null) {\r\n                continue;\r\n            }\r\n            feature.load(featureSaveData);\r\n        }\r\n    }\r\n\r\n    private printStateWarning(reason: string): void {\r\n        console.warn(`Current state = ${this.state}.`, reason);\r\n    }\r\n\r\n    private get featureList(): Feature[] {\r\n        return Object.values(this.features)\r\n    }\r\n}\r\n"],"sourceRoot":""}]}