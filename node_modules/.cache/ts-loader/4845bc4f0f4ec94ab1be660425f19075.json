{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--14-3!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\items\\Consumable.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\items\\Consumable.ts","mtime":1655089314981},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1655271851050},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkM6L1VzZXJzL0xlZS9Eb2N1bWVudHMvR2l0SHViL2luY3JlbWVudGFsLWhlbGwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCB7IEFic3RyYWN0SXRlbSB9IGZyb20gIkAvZW5naW5lL2ZlYXR1cmVzL2l0ZW1zL0Fic3RyYWN0SXRlbSI7CmV4cG9ydCB2YXIgQWJzdHJhY3RDb25zdW1hYmxlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQWJzdHJhY3RJdGVtKSB7CiAgX2luaGVyaXRzKEFic3RyYWN0Q29uc3VtYWJsZSwgX0Fic3RyYWN0SXRlbSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQWJzdHJhY3RDb25zdW1hYmxlKTsKCiAgZnVuY3Rpb24gQWJzdHJhY3RDb25zdW1hYmxlKG5hbWUsIGRlc2NyaXB0aW9uLCBpZCwgdHlwZSkgewogICAgdmFyIG1heFN0YWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgJiYgYXJndW1lbnRzWzRdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNF0gOiBJbmZpbml0eTsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWJzdHJhY3RDb25zdW1hYmxlKTsKCiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgbmFtZSwgZGVzY3JpcHRpb24sIGlkLCB0eXBlLCBtYXhTdGFjayk7CiAgfQogIC8qKg0KICAgKiBOT1RFOiB5b3VyIGNvbnN1bWFibGVzIGNhbiBwcm9iYWJseSBkbyBzb21ldGhpbmcgbW9yZSBjbGV2ZXIgaGVyZS4NCiAgICogTWFrZSBzdXJlIHRvIG92ZXJyaWRlIHRoaXMgbWV0aG9kIGFzIG5lZWRlZC4NCiAgICovCgoKICBfY3JlYXRlQ2xhc3MoQWJzdHJhY3RDb25zdW1hYmxlLCBbewogICAga2V5OiAiY29uc3VtZU11bHRpcGxlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb25zdW1lTXVsdGlwbGUoYW1vdW50KSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYW1vdW50OyBpKyspIHsKICAgICAgICB0aGlzLmNvbnN1bWUoKTsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFic3RyYWN0Q29uc3VtYWJsZTsKfShBYnN0cmFjdEl0ZW0pOw=="},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\items\\Consumable.ts"],"names":[],"mappings":";;;;AAAA,SAAQ,YAAR,QAA2B,sCAA3B;AAIA,WAAsB,kBAAtB;AAAA;;AAAA;;AAOI,8BAAsB,IAAtB,EAAoC,WAApC,EAAyD,EAAzD,EAAqE,IAArE,EAAgH;AAAA,QAA3B,QAA2B,uEAAR,QAAQ;;AAAA;;AAAA,6BACtG,IADsG,EAChG,WADgG,EACnF,EADmF,EAC/E,IAD+E,EACzE,QADyE;AAE/G;AAOD;;;AAGG;;;AAnBP;AAAA;AAAA,WAoBI,yBAAgB,MAAhB,EAA8B;AAC1B,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC7B,aAAK,OAAL;AACH;AACJ;AAxBL;;AAAA;AAAA,EAAiD,YAAjD","sourcesContent":["import {AbstractItem} from \"@/engine/features/items/AbstractItem\";\r\nimport {ItemId} from \"@/engine/features/items/ItemId\";\r\nimport {ItemType} from \"@/engine/features/items/ItemType\";\r\n\r\nexport abstract class AbstractConsumable extends AbstractItem {\r\n\r\n    /**\r\n     * What will be shown on the consume button\r\n     */\r\n    abstract consumeLabel: string;\r\n\r\n    protected constructor(name: string, description: string, id: ItemId, type: ItemType, maxStack: number = Infinity) {\r\n        super(name, description, id, type, maxStack);\r\n    }\r\n\r\n    /**\r\n     * What to do when this item is consumed.\r\n     */\r\n    abstract consume(): void;\r\n\r\n    /**\r\n     * NOTE: your consumables can probably do something more clever here.\r\n     * Make sure to override this method as needed.\r\n     */\r\n    consumeMultiple(amount: number): void {\r\n        for (let i = 0; i < amount; i++) {\r\n            this.consume()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether or not this item can be consumed.\r\n     */\r\n    abstract canConsume(): boolean;\r\n}\r\n"],"sourceRoot":""}]}