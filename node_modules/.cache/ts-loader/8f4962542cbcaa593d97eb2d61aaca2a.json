{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\upgrades\\Upgrade.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\upgrades\\Upgrade.ts","mtime":1655182977722},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655271851080},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655271854201},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655271854628},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655271851823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9MZWUvRG9jdW1lbnRzL0dpdEh1Yi9pbmNyZW1lbnRhbC1oZWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvTGVlL0RvY3VtZW50cy9HaXRIdWIvaW5jcmVtZW50YWwtaGVsbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgeyBBcHAgfSBmcm9tICJAL0FwcCI7CmltcG9ydCB7IFVwZ3JhZGVTYXZlRGF0YSB9IGZyb20gIkAvZW5naW5lL2ZlYXR1cmVzL3VwZ3JhZGVzL1VwZ3JhZGVTYXZlRGF0YSI7Ci8qKg0KICogR2VuZXJpYyB1cGdyYWRlIGNsYXNzDQogKi8KCmV4cG9ydCB2YXIgVXBncmFkZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gVXBncmFkZShpZCwgdHlwZSwgZGlzcGxheU5hbWUsIG1heExldmVsKSB7CiAgICB2YXIgaW5jcmVhc2luZyA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogdHJ1ZTsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVXBncmFkZSk7CgogICAgLy8gU2F2ZSBsb2dpYwogICAgdGhpcy5zYXZlS2V5ID0gdGhpcy5pZDsKICAgIHRoaXMuaWQgPSBpZDsKICAgIHRoaXMudHlwZSA9IHR5cGU7CiAgICB0aGlzLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7CiAgICB0aGlzLm1heExldmVsID0gbWF4TGV2ZWw7CiAgICB0aGlzLmxldmVsID0gMDsKICAgIHRoaXMuaW5jcmVhc2luZyA9IGluY3JlYXNpbmc7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVXBncmFkZSwgW3sKICAgIGtleTogImdldFVwZ3JhZGVCb251cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VXBncmFkZUJvbnVzKCkgewogICAgICBpZiAoIXRoaXMuaXNNYXhMZXZlbCgpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Qm9udXModGhpcy5sZXZlbCArIDEpIC0gdGhpcy5nZXRCb251cyh0aGlzLmxldmVsKTsKICAgICAgfQoKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNNYXhMZXZlbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNNYXhMZXZlbCgpIHsKICAgICAgcmV0dXJuIHRoaXMubGV2ZWwgPj0gdGhpcy5tYXhMZXZlbDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjYW5BZmZvcmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNhbkFmZm9yZCgpIHsKICAgICAgcmV0dXJuIEFwcC5nYW1lLmZlYXR1cmVzLndhbGxldC5oYXNDdXJyZW5jeSh0aGlzLmdldENvc3QoKSk7CiAgICB9IC8vIE92ZXJyaWRlIGluIHN1YmNsYXNzIHdoZW4gb3RoZXIgcmVxdWlyZW1lbnRzIGV4aXN0LgoKICB9LCB7CiAgICBrZXk6ICJjYW5CdXkiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNhbkJ1eSgpIHsKICAgICAgcmV0dXJuIHRoaXMubGV2ZWwgPCB0aGlzLm1heExldmVsICYmIHRoaXMuY2FuQWZmb3JkKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiYnV5IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBidXkoKSB7CiAgICAgIGlmICh0aGlzLmNhbkJ1eSgpKSB7CiAgICAgICAgQXBwLmdhbWUuZmVhdHVyZXMud2FsbGV0Lmxvc2VDdXJyZW5jeSh0aGlzLmdldENvc3QoKSk7CiAgICAgICAgdGhpcy5sZXZlbFVwKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJsZXZlbFVwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsZXZlbFVwKCkgewogICAgICB0aGlzLmxldmVsID0gdGhpcy5sZXZlbCArIDE7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9hZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZChkYXRhKSB7CiAgICAgIHRoaXMubGV2ZWwgPSBkYXRhLmxldmVsOwogICAgfQogIH0sIHsKICAgIGtleTogInBhcnNlU2F2ZURhdGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlU2F2ZURhdGEoanNvbikgewogICAgICB2YXIgX2pzb24kbGV2ZWw7CgogICAgICByZXR1cm4gbmV3IFVwZ3JhZGVTYXZlRGF0YShqc29uID09PSBudWxsIHx8IGpzb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGpzb24uaWQsIChfanNvbiRsZXZlbCA9IGpzb24gPT09IG51bGwgfHwganNvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDoganNvbi5sZXZlbCkgIT09IG51bGwgJiYgX2pzb24kbGV2ZWwgIT09IHZvaWQgMCA/IF9qc29uJGxldmVsIDogMCk7CiAgICB9CiAgfSwgewogICAga2V5OiAic2F2ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2F2ZSgpIHsKICAgICAgcmV0dXJuIG5ldyBVcGdyYWRlU2F2ZURhdGEodGhpcy5pZCwgdGhpcy5sZXZlbCk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVXBncmFkZTsKfSgpOw=="},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\features\\upgrades\\Upgrade.ts"],"names":[],"mappings":";;AAEA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,eAAR,QAA8B,4CAA9B;AAGA;;AAEG;;AAEH,WAAsB,OAAtB;AAYI,mBAAsB,EAAtB,EAAkC,IAAlC,EAAqD,WAArD,EAA0E,QAA1E,EAA6G;AAAA,QAAjB,UAAiB,uEAAJ,IAAI;;AAAA;;AA6C7G;AACA,SAAA,OAAA,GAAkB,KAAK,EAAvB;AA7CI,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,KAAL,GAAa,CAAb;AACA,SAAK,UAAL,GAAkB,UAAlB;AACH;;AAnBL;AAAA;AAAA,WAyBI,2BAAe;AACX,UAAI,CAAC,KAAK,UAAL,EAAL,EAAwB;AACpB,eAAO,KAAK,QAAL,CAAc,KAAK,KAAL,GAAa,CAA3B,IAAgC,KAAK,QAAL,CAAc,KAAK,KAAnB,CAAvC;AACH;;AACD,aAAO,CAAP;AACH;AA9BL;AAAA;AAAA,WAgCI,sBAAU;AACN,aAAO,KAAK,KAAL,IAAc,KAAK,QAA1B;AACH;AAlCL;AAAA;AAAA,WAoCI,qBAAS;AACL,aAAO,GAAG,CAAC,IAAJ,CAAS,QAAT,CAAkB,MAAlB,CAAyB,WAAzB,CAAqC,KAAK,OAAL,EAArC,CAAP;AACH,KAtCL,CAwCI;;AAxCJ;AAAA;AAAA,WAyCI,kBAAM;AACF,aAAO,KAAK,KAAL,GAAa,KAAK,QAAlB,IAA8B,KAAK,SAAL,EAArC;AACH;AA3CL;AAAA;AAAA,WA6CI,eAAG;AACC,UAAI,KAAK,MAAL,EAAJ,EAAmB;AACf,QAAA,GAAG,CAAC,IAAJ,CAAS,QAAT,CAAkB,MAAlB,CAAyB,YAAzB,CAAsC,KAAK,OAAL,EAAtC;AACA,aAAK,OAAL;AACH;AACJ;AAlDL;AAAA;AAAA,WAoDI,mBAAO;AACH,WAAK,KAAL,GAAa,KAAK,KAAL,GAAa,CAA1B;AACH;AAtDL;AAAA;AAAA,WA4DI,cAAK,IAAL,EAA0B;AACtB,WAAK,KAAL,GAAa,IAAI,CAAC,KAAlB;AACH;AA9DL;AAAA;AAAA,WAgEI,uBAAc,IAAd,EAA2C;AAAA;;AACvC,aAAO,IAAI,eAAJ,CAAoB,IAApB,aAAoB,IAApB,uBAAoB,IAAI,CAAE,EAA1B,iBAAwC,IAAxC,aAAwC,IAAxC,uBAAwC,IAAI,CAAE,KAA9C,qDAAiE,CAAjE,CAAP;AACH;AAlEL;AAAA;AAAA,WAoEI,gBAAI;AACA,aAAO,IAAI,eAAJ,CAAoB,KAAK,EAAzB,EAA6B,KAAK,KAAlC,CAAP;AACH;AAtEL;;AAAA;AAAA","sourcesContent":["import {Saveable} from \"@/engine/features/saving/Saveable\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {App} from \"@/App\";\r\nimport {UpgradeSaveData} from \"@/engine/features/upgrades/UpgradeSaveData\";\r\nimport {UpgradeType} from \"@/engine/features/upgrades/UpgradeType\";\r\n\r\n/**\r\n * Generic upgrade class\r\n */\r\n\r\nexport abstract class Upgrade implements Saveable {\r\n    id: string;\r\n    type: UpgradeType;\r\n    displayName: string;\r\n    maxLevel: number;\r\n    level: number;\r\n\r\n    // Describes whether this upgrade increases or decreases a number.\r\n    // (e.g. power is increasing, time is decreasing).\r\n    increasing: boolean;\r\n\r\n\r\n    protected constructor(id: string, type: UpgradeType, displayName: string, maxLevel: number, increasing = true) {\r\n        this.id = id;\r\n        this.type = type;\r\n        this.displayName = displayName;\r\n        this.maxLevel = maxLevel;\r\n        this.level = 0;\r\n        this.increasing = increasing;\r\n    }\r\n\r\n    abstract getCost(): Currency;\r\n\r\n    abstract getBonus(level: number): number;\r\n\r\n    getUpgradeBonus(): number {\r\n        if (!this.isMaxLevel()) {\r\n            return this.getBonus(this.level + 1) - this.getBonus(this.level);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isMaxLevel(): boolean {\r\n        return this.level >= this.maxLevel;\r\n    }\r\n\r\n    canAfford(): boolean {\r\n        return App.game.features.wallet.hasCurrency(this.getCost());\r\n    }\r\n\r\n    // Override in subclass when other requirements exist.\r\n    canBuy(): boolean {\r\n        return this.level < this.maxLevel && this.canAfford();\r\n    }\r\n\r\n    buy(): void {\r\n        if (this.canBuy()) {\r\n            App.game.features.wallet.loseCurrency(this.getCost());\r\n            this.levelUp();\r\n        }\r\n    }\r\n\r\n    levelUp(): void {\r\n        this.level = this.level + 1;\r\n    }\r\n\r\n\r\n    // Save logic\r\n    saveKey: string = this.id;\r\n\r\n    load(data: UpgradeSaveData): void {\r\n        this.level = data.level;\r\n    }\r\n\r\n    parseSaveData(json: Record<string, unknown>): UpgradeSaveData {\r\n        return new UpgradeSaveData(json?.id as string, json?.level as number ?? 0)\r\n    }\r\n\r\n    save(): UpgradeSaveData {\r\n        return new UpgradeSaveData(this.id, this.level)\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}]}