{"remainingRequest":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js??ref--15-3!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\Game.ts","dependencies":[{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\Game.ts","mtime":1655349015125},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655266380406},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1655266380416},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\babel-loader\\lib\\index.js","mtime":1655266380353},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\ts-loader\\index.js","mtime":1655266386985},{"path":"C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js","mtime":1655266386089}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Lee\\Documents\\GitHub\\incremental-hell\\src\\engine\\Game.ts"],"names":[],"mappings":"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","sourcesContent":["import {GameState} from \"./GameState\";\r\nimport {LocalStorage} from \"@/engine/tools/saving/LocalStorage\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Features} from \"@/engine/Features\";\r\nimport {Feature} from \"@/engine/features/Feature\";\r\nimport {DeveloperPanel} from \"@/engine/developer-panel/DeveloperPanel\";\r\nimport {DeveloperPanelTab} from \"@/engine/developer-panel/DeveloperPanelTab\";\r\nimport {FunctionField} from \"@/engine/developer-panel/fields/FunctionField\";\r\nimport {DisplayField} from \"@/engine/developer-panel/fields/DisplayField\";\r\nimport {ChoiceField} from \"@/engine/developer-panel/fields/ChoiceField\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {ISignal, ISimpleEvent, SignalDispatcher, SimpleEventDispatcher} from \"strongly-typed-events\";\r\n\r\nexport class Game {\r\n    private _tickInterval: number = -1;\r\n\r\n    /**\r\n     * Object with registered features. If you want them as a list use this.featureList\r\n     */\r\n    public readonly features: Features;\r\n\r\n    public state: GameState;\r\n\r\n\r\n    protected readonly TICK_DURATION: number = 0.1;\r\n    private readonly SAVE_INTERVAL = 30;\r\n    private _nextSave = this.SAVE_INTERVAL;\r\n\r\n    private gameSpeed = 1;\r\n    private _lastUpdate: number = 0;\r\n\r\n    /**\r\n     * Emitted whenever the game saves\r\n     */\r\n    private _onSave = new SignalDispatcher();\r\n\r\n    public get onSave(): ISignal {\r\n        return this._onSave.asEvent();\r\n    }\r\n\r\n    /**\r\n     * Make sure this key is unique to your game.\r\n     * Otherwise you might run into loading conflicts when multiple games are hosted on the same domain (such as <username.github.io/game)\r\n     */\r\n    protected readonly SAVE_KEY: string = \"incremental-hell\";\r\n\r\n    constructor(features: Features) {\r\n        this.features = features;\r\n\r\n        this.state = GameState.Launching;\r\n    }\r\n\r\n    public getDeveloperPanel(): DeveloperPanel {\r\n        // Start with play buttons for the game\r\n        const tabs: DeveloperPanelTab[] = [\r\n            new DeveloperPanelTab('Game', [\r\n                new DisplayField('state', 'State').setObject(this),\r\n                new ChoiceField('gameSpeed', [\r\n                    ['0.5x', 0.5],\r\n                    ['1x', 1],\r\n                    ['2x', 2],\r\n                    ['4x', 4],\r\n                ], 'Game speed').setObject(this),\r\n                new FunctionField(() => {\r\n                    this.start()\r\n                }, 'Start').setCssClass('btn-green'),\r\n                new FunctionField(() => {\r\n                    this.pause()\r\n                }, 'Pause').setCssClass('btn-blue'),\r\n                new FunctionField(() => {\r\n                    this.resume()\r\n                }, 'Resume').setCssClass('btn-green'),\r\n                new FunctionField(() => {\r\n                    this.stop()\r\n                }, 'Stop').setCssClass('btn-red'),\r\n            ]),\r\n\r\n        ];\r\n\r\n\r\n        for (const feature of this.featureList) {\r\n            const fields = feature.getDeveloperPanelFields();\r\n\r\n            // Inject the feature into the resource.\r\n            for (const field of fields) {\r\n                field.setObject(feature);\r\n            }\r\n\r\n            const tab = new DeveloperPanelTab(feature.saveKey, fields)\r\n            if (!tab.isEmpty()) {\r\n                tabs.push(tab)\r\n            }\r\n        }\r\n        return new DeveloperPanel(tabs);\r\n    }\r\n\r\n    /**\r\n     * Update all features\r\n     */\r\n    public update(): void {\r\n        const now = new Date().getTime() / 1000;\r\n        const timeDifference = now - this._lastUpdate;\r\n\r\n        if (this.state != GameState.Playing) {\r\n            return;\r\n        }\r\n\r\n        const delta = timeDifference * this.gameSpeed;\r\n        for (const feature of this.featureList) {\r\n            feature.update(delta)\r\n        }\r\n\r\n        this._lastUpdate = now;\r\n        this._nextSave -= delta;\r\n        if (this._nextSave <= 0) {\r\n            this.save();\r\n            this._nextSave = this.SAVE_INTERVAL;\r\n        }\r\n    }\r\n\r\n    public getTotalCurrencyMultiplier(type: CurrencyType): number {\r\n        let multiplier = 1;\r\n        for (const feature of this.featureList) {\r\n            multiplier *= feature.getTotalCurrencyMultiplier(type);\r\n        }\r\n        return multiplier;\r\n    }\r\n\r\n    /**\r\n     * Initialize all features\r\n     */\r\n    public initialize(): void {\r\n        for (const feature of this.featureList) {\r\n            feature.initialize(this.features);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Start the main update loop\r\n     */\r\n    public start(): void {\r\n        if (this.state !== GameState.Stopped && this.state !== GameState.Launching) {\r\n            this.printStateWarning(\"Cannot start the game twice.\");\r\n            return;\r\n        }\r\n\r\n        for (const feature of this.featureList) {\r\n            feature.start();\r\n        }\r\n\r\n        this._lastUpdate = new Date().getTime() / 1000;\r\n        this._tickInterval = Number(setInterval(() => this.update(), this.TICK_DURATION * 1000));\r\n\r\n        this.state = GameState.Playing;\r\n        console.debug(\"Game Started\");\r\n    }\r\n\r\n    public pause(): void {\r\n        if (this.state !== GameState.Playing) {\r\n            this.printStateWarning(\"Cannot pause the game if we're not playing.\");\r\n            return;\r\n        }\r\n        clearInterval(this._tickInterval);\r\n\r\n        this.state = GameState.Paused;\r\n        console.debug(\"Game Paused\");\r\n    }\r\n\r\n\r\n    public resume(): void {\r\n        if (this.state !== GameState.Paused) {\r\n            this.printStateWarning(\"Cannot resume the game if we're not paused.\");\r\n            return;\r\n        }\r\n\r\n        this._lastUpdate = new Date().getTime() / 1000;\r\n        // this._tickInterval = setInterval(() => this.update(), this.TICK_DURATION * 1000);\r\n\r\n        this.state = GameState.Playing;\r\n        console.debug(\"Game Resumed\");\r\n    }\r\n\r\n    /**\r\n     * Stop the main update loop\r\n     */\r\n    public stop(): void {\r\n        if (this.state === GameState.Stopped) {\r\n            this.printStateWarning(\"Cannot stop the game if we're already stopped.\");\r\n            return;\r\n        }\r\n        clearInterval(this._tickInterval);\r\n\r\n        for (const feature of this.featureList) {\r\n            feature.stop();\r\n        }\r\n\r\n        this.state = GameState.Stopped;\r\n        console.debug(\"Stopped\");\r\n    }\r\n\r\n    /**\r\n     * Recursively save all registered features\r\n     */\r\n    public save(): void {\r\n        const res: Record<string, unknown> = {};\r\n        for (const feature of this.featureList) {\r\n            res[feature.saveKey] = feature.save()\r\n        }\r\n        LocalStorage.store(this.SAVE_KEY, res)\r\n        this._onSave.dispatch();\r\n    }\r\n\r\n    /**\r\n     * Delete the locally stored save\r\n     */\r\n    public deleteSave(): void {\r\n        LocalStorage.delete(this.SAVE_KEY);\r\n    }\r\n\r\n    /**\r\n     * Recursively load all registered features\r\n     */\r\n    public load(): void {\r\n        const saveData = LocalStorage.get(this.SAVE_KEY)\r\n        if (saveData == null) {\r\n            return;\r\n        }\r\n        for (const feature of this.featureList) {\r\n            const featureSaveData: Record<string, unknown> = saveData[feature.saveKey] as Record<string, unknown>;\r\n            if (featureSaveData == null) {\r\n                continue;\r\n            }\r\n            feature.load(featureSaveData);\r\n        }\r\n    }\r\n\r\n    private printStateWarning(reason: string): void {\r\n        console.warn(`Current state = ${this.state}.`, reason);\r\n    }\r\n\r\n    private get featureList(): Feature[] {\r\n        return Object.values(this.features)\r\n    }\r\n}\r\n"],"sourceRoot":""}]}