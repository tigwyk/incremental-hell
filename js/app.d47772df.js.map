{"version":3,"file":"js/app.d47772df.js","mappings":"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","sources":["webpack://igt-vue/./src/engine/GameState.ts","webpack://igt-vue/./src/VueApp.vue?c21c","webpack://igt-vue/./src/engine/tools/saving/LocalStorage.ts","webpack://igt-vue/./src/engine/developer-panel/DeveloperPanel.ts","webpack://igt-vue/./src/engine/developer-panel/DeveloperPanelTab.ts","webpack://igt-vue/./src/engine/developer-panel/fields/AbstractField.ts","webpack://igt-vue/./src/engine/developer-panel/fields/FunctionField.ts","webpack://igt-vue/./src/engine/developer-panel/fields/DisplayField.ts","webpack://igt-vue/./src/engine/developer-panel/fields/ChoiceField.ts","webpack://igt-vue/./src/engine/Game.ts","webpack://igt-vue/./src/engine/features/wallet/CurrencyType.ts","webpack://igt-vue/./src/engine/features/settings/SettingId.ts","webpack://igt-vue/./src/engine/features/statistics/StatisticId.ts","webpack://igt-vue/./src/engine/features/achievements/AchievementId.ts","webpack://igt-vue/./src/engine/features/upgrades/UpgradeType.ts","webpack://igt-vue/./src/engine/features/timeline/TimeLineState.ts","webpack://igt-vue/./src/engine/features/Feature.ts","webpack://igt-vue/./src/engine/developer-panel/fields/NumberField.ts","webpack://igt-vue/./src/engine/developer-panel/fields/RangeField.ts","webpack://igt-vue/./src/engine/features/wallet/Wallet.ts","webpack://igt-vue/./src/engine/tools/requirements/Progress.ts","webpack://igt-vue/./src/engine/tools/requirements/Requirement.ts","webpack://igt-vue/./src/engine/tools/requirements/NoRequirement.ts","webpack://igt-vue/./src/engine/features/settings/Setting.ts","webpack://igt-vue/./src/engine/features/settings/SettingOption.ts","webpack://igt-vue/./src/engine/features/settings/BooleanSetting.ts","webpack://igt-vue/./src/engine/features/settings/Settings.ts","webpack://igt-vue/./src/engine/features/statistics/AbstractStatistic.ts","webpack://igt-vue/./src/engine/features/statistics/NumberStatistic.ts","webpack://igt-vue/./src/engine/features/statistics/StatisticsSaveData.ts","webpack://igt-vue/./src/engine/features/statistics/ArrayStatistic.ts","webpack://igt-vue/./src/engine/features/statistics/Statistics.ts","webpack://igt-vue/./src/engine/features/achievements/Achievement.ts","webpack://igt-vue/./src/engine/features/achievements/AchievementSaveData.ts","webpack://igt-vue/./src/engine/tools/requirements/ManualRequirement.ts","webpack://igt-vue/./src/engine/features/achievements/CustomAchievement.ts","webpack://igt-vue/./src/engine/features/statistics/requirements/NumberStatisticRequirement.ts","webpack://igt-vue/./src/engine/features/achievements/Achievements.ts","webpack://igt-vue/./src/engine/features/saving/SaveData.ts","webpack://igt-vue/./src/engine/features/scrap/ScrapSaveData.ts","webpack://igt-vue/./src/engine/features/upgrades/UpgradeListSaveData.ts","webpack://igt-vue/./src/engine/features/upgrades/UpgradeList.ts","webpack://igt-vue/./src/engine/features/wallet/Currency.ts","webpack://igt-vue/./src/engine/features/wallet/CurrencyBuilder.ts","webpack://igt-vue/./src/engine/features/upgrades/UpgradeSaveData.ts","webpack://igt-vue/./src/engine/features/upgrades/Upgrade.ts","webpack://igt-vue/./src/engine/features/upgrades/DiscreteUpgrade.ts","webpack://igt-vue/./src/engine/features/upgrades/SingleLevelUpgrade.ts","webpack://igt-vue/./src/engine/progressbars/ProgressBar.ts","webpack://igt-vue/./src/engine/tools/requirements/MultiRequirement.ts","webpack://igt-vue/./src/engine/features/scrap/ScrapAction.ts","webpack://igt-vue/./src/engine/features/statistics/requirements/StatisticRequirement.ts","webpack://igt-vue/./src/engine/features/scrap/Scrap.ts","webpack://igt-vue/./src/engine/features/timeline/TimeLineSaveData.ts","webpack://igt-vue/./src/engine/features/timeline/TimeLine.ts","webpack://igt-vue/./src/App.ts","webpack://igt-vue/./src/components/util/igt-notifications.vue?f87c","webpack://igt-vue/./src/components/util/igt-notification.vue?7076","webpack://igt-vue/src/components/util/igt-notification.vue","webpack://igt-vue/./src/components/util/igt-notification.vue?f485","webpack://igt-vue/./src/components/util/igt-notification.vue","webpack://igt-vue/src/components/util/igt-notifications.vue","webpack://igt-vue/./src/components/util/igt-notifications.vue?2a83","webpack://igt-vue/./src/components/util/igt-notifications.vue","webpack://igt-vue/./src/components/features/Scrap.vue?9218","webpack://igt-vue/./src/components/Upgrade.vue?09c5","webpack://igt-vue/./src/components/Currency.vue?3847","webpack://igt-vue/src/components/Currency.vue","webpack://igt-vue/./src/components/Currency.vue?4afa","webpack://igt-vue/./src/components/Currency.vue","webpack://igt-vue/src/components/Upgrade.vue","webpack://igt-vue/./src/components/Upgrade.vue?2721","webpack://igt-vue/./src/components/Upgrade.vue","webpack://igt-vue/./src/components/ScrapAction.vue?74fa","webpack://igt-vue/src/components/ScrapAction.vue","webpack://igt-vue/./src/components/ScrapAction.vue?694e","webpack://igt-vue/./src/components/ScrapAction.vue","webpack://igt-vue/src/components/features/Scrap.vue","webpack://igt-vue/./src/components/features/Scrap.vue?2264","webpack://igt-vue/./src/components/features/Scrap.vue","webpack://igt-vue/./src/components/features/TimeLine.vue?4096","webpack://igt-vue/src/components/features/TimeLine.vue","webpack://igt-vue/./src/components/features/TimeLine.vue?c9a2","webpack://igt-vue/./src/components/features/TimeLine.vue","webpack://igt-vue/src/VueApp.vue","webpack://igt-vue/./src/VueApp.vue?7bd4","webpack://igt-vue/./src/VueApp.vue","webpack://igt-vue/./src/VueFilters.ts","webpack://igt-vue/./src/main.ts","webpack://igt-vue/webpack/bootstrap","webpack://igt-vue/webpack/runtime/chunk loaded","webpack://igt-vue/webpack/runtime/define property getters","webpack://igt-vue/webpack/runtime/global","webpack://igt-vue/webpack/runtime/hasOwnProperty shorthand","webpack://igt-vue/webpack/runtime/jsonp chunk loading","webpack://igt-vue/webpack/startup"],"sourcesContent":["/**\r\n * Launching: The default, game is still starting up\r\n * Playing: Normal gameplay\r\n * Paused: Gameplay is suspended, to continue you need to resume\r\n * Stopped: Gameplay is stopped, to continue you need to start\r\n */\r\nexport enum GameState {\r\n    Launching = \"Launching\",\r\n    Playing = \"Playing\",\r\n    Paused = \"Paused\",\r\n    Stopped = \"Stopped\",\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('time-line'),_c('div',{staticClass:\"column\"},[_c('div',{staticClass:\"row\"},[_c('scrap')],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export class LocalStorage {\r\n    public static store(key: string, data: Record<string, unknown>): void {\r\n        localStorage.setItem(key, JSON.stringify(data));\r\n    }\r\n\r\n    // TODO(@Isha) add error handling here\r\n    public static get(key: string): Record<string, unknown> {\r\n        return JSON.parse(localStorage.getItem(key) as string) as Record<string, unknown>;\r\n    }\r\n\r\n    public static delete(key: string): void {\r\n        localStorage.removeItem(key)\r\n    }\r\n}\r\n","import {DeveloperPanelTab} from \"@/engine/developer-panel/DeveloperPanelTab\";\r\n\r\nexport class DeveloperPanel {\r\n    tabs: DeveloperPanelTab[];\r\n\r\n    constructor(tabs: DeveloperPanelTab[]) {\r\n        this.tabs = tabs;\r\n    }\r\n}","import {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\n\r\nexport class DeveloperPanelTab {\r\n    label: string;\r\n    children: AbstractField[];\r\n\r\n\r\n    constructor(label: string, children: AbstractField[]) {\r\n        this.label = label;\r\n        this.children = children;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.children.length == 0;\r\n    }\r\n}","export class AbstractField {\r\n    object: object | undefined;\r\n    componentName: string | undefined;\r\n\r\n    propertyName: string;\r\n    label: string | undefined;\r\n\r\n    cssClass: string;\r\n\r\n    constructor(propertyName: string, label?: string) {\r\n        this.propertyName = propertyName;\r\n        this.label = label;\r\n        this.cssClass = 'btn-green';\r\n    }\r\n\r\n    get displayLabel() {\r\n        return this.label ?? this.propertyName;\r\n    }\r\n\r\n    get value() {\r\n        if (this.object == undefined) {\r\n            console.warn(`Cannot get warning as object is undefined for AbstractField ${this.propertyName}`)\r\n            return '';\r\n        }\r\n        return (this.object as any)[this.propertyName];\r\n    }\r\n\r\n    set value(value: any) {\r\n        (this.object as any)[this.propertyName] = value;\r\n    }\r\n\r\n    setObject(object: object): this {\r\n        this.object = object;\r\n        return this;\r\n    }\r\n\r\n    setCssClass(cssClass: string): this {\r\n        this.cssClass = cssClass;\r\n        return this;\r\n    }\r\n\r\n    setComponentName(name: string): this {\r\n        this.componentName = name;\r\n        return this;\r\n    }\r\n}","import {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\n\r\n/**\r\n * Runs a custom function when the button is pressed\r\n */\r\nexport class FunctionField extends AbstractField {\r\n\r\n    func: Function ;\r\n\r\n    constructor(func: Function, label?: string) {\r\n        super('', label);\r\n        this.func = func;\r\n        this.setComponentName('igt-button-field');\r\n    }\r\n\r\n}","import {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\n\r\nexport class DisplayField extends AbstractField {\r\n\r\n    constructor(propertyName: string, label?: string) {\r\n        super(propertyName, label);\r\n        this.setComponentName('igt-display-field');\r\n    }\r\n\r\n}","import {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\n\r\nexport class ChoiceField extends AbstractField {\r\n    options: [string, number][];\r\n\r\n    constructor(propertyName: string, options: [string, number][], label?: string) {\r\n        super(propertyName, label);\r\n        this.options = options;\r\n        this.setComponentName('igt-choice-field');\r\n    }\r\n\r\n}","import {GameState} from \"./GameState\";\r\nimport {LocalStorage} from \"@/engine/tools/saving/LocalStorage\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Features} from \"@/engine/Features\";\r\nimport {Feature} from \"@/engine/features/Feature\";\r\nimport {DeveloperPanel} from \"@/engine/developer-panel/DeveloperPanel\";\r\nimport {DeveloperPanelTab} from \"@/engine/developer-panel/DeveloperPanelTab\";\r\nimport {FunctionField} from \"@/engine/developer-panel/fields/FunctionField\";\r\nimport {DisplayField} from \"@/engine/developer-panel/fields/DisplayField\";\r\nimport {ChoiceField} from \"@/engine/developer-panel/fields/ChoiceField\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {ISignal, ISimpleEvent, SignalDispatcher, SimpleEventDispatcher} from \"strongly-typed-events\";\r\n\r\nexport class Game {\r\n    private _tickInterval: number = -1;\r\n\r\n    /**\r\n     * Object with registered features. If you want them as a list use this.featureList\r\n     */\r\n    public readonly features: Features;\r\n\r\n    public state: GameState;\r\n\r\n\r\n    protected readonly TICK_DURATION: number = 0.1;\r\n    private readonly SAVE_INTERVAL = 30;\r\n    private _nextSave = this.SAVE_INTERVAL;\r\n\r\n    private gameSpeed = 1;\r\n    private _lastUpdate: number = 0;\r\n\r\n    /**\r\n     * Emitted whenever the game saves\r\n     */\r\n    private _onSave = new SignalDispatcher();\r\n\r\n    public get onSave(): ISignal {\r\n        return this._onSave.asEvent();\r\n    }\r\n\r\n    /**\r\n     * Make sure this key is unique to your game.\r\n     * Otherwise you might run into loading conflicts when multiple games are hosted on the same domain (such as <username.github.io/game)\r\n     */\r\n    protected readonly SAVE_KEY: string = \"incremental-hell\";\r\n\r\n    constructor(features: Features) {\r\n        this.features = features;\r\n\r\n        this.state = GameState.Launching;\r\n    }\r\n\r\n    public getDeveloperPanel(): DeveloperPanel {\r\n        // Start with play buttons for the game\r\n        const tabs: DeveloperPanelTab[] = [\r\n            new DeveloperPanelTab('Game', [\r\n                new DisplayField('state', 'State').setObject(this),\r\n                new ChoiceField('gameSpeed', [\r\n                    ['0.5x', 0.5],\r\n                    ['1x', 1],\r\n                    ['2x', 2],\r\n                    ['4x', 4],\r\n                ], 'Game speed').setObject(this),\r\n                new FunctionField(() => {\r\n                    this.start()\r\n                }, 'Start').setCssClass('btn-green'),\r\n                new FunctionField(() => {\r\n                    this.pause()\r\n                }, 'Pause').setCssClass('btn-blue'),\r\n                new FunctionField(() => {\r\n                    this.resume()\r\n                }, 'Resume').setCssClass('btn-green'),\r\n                new FunctionField(() => {\r\n                    this.stop()\r\n                }, 'Stop').setCssClass('btn-red'),\r\n            ]),\r\n\r\n        ];\r\n\r\n\r\n        for (const feature of this.featureList) {\r\n            const fields = feature.getDeveloperPanelFields();\r\n\r\n            // Inject the feature into the resource.\r\n            for (const field of fields) {\r\n                field.setObject(feature);\r\n            }\r\n\r\n            const tab = new DeveloperPanelTab(feature.saveKey, fields)\r\n            if (!tab.isEmpty()) {\r\n                tabs.push(tab)\r\n            }\r\n        }\r\n        return new DeveloperPanel(tabs);\r\n    }\r\n\r\n    /**\r\n     * Update all features\r\n     */\r\n    public update(): void {\r\n        const now = new Date().getTime() / 1000;\r\n        const timeDifference = now - this._lastUpdate;\r\n\r\n        if (this.state != GameState.Playing) {\r\n            return;\r\n        }\r\n\r\n        const delta = timeDifference * this.gameSpeed;\r\n        for (const feature of this.featureList) {\r\n            feature.update(delta)\r\n        }\r\n\r\n        this._lastUpdate = now;\r\n        this._nextSave -= delta;\r\n        if (this._nextSave <= 0) {\r\n            this.save();\r\n            this._nextSave = this.SAVE_INTERVAL;\r\n        }\r\n    }\r\n\r\n    public getTotalCurrencyMultiplier(type: CurrencyType): number {\r\n        let multiplier = 1;\r\n        for (const feature of this.featureList) {\r\n            multiplier *= feature.getTotalCurrencyMultiplier(type);\r\n        }\r\n        return multiplier;\r\n    }\r\n\r\n    /**\r\n     * Initialize all features\r\n     */\r\n    public initialize(): void {\r\n        for (const feature of this.featureList) {\r\n            feature.initialize(this.features);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Start the main update loop\r\n     */\r\n    public start(): void {\r\n        if (this.state !== GameState.Stopped && this.state !== GameState.Launching) {\r\n            this.printStateWarning(\"Cannot start the game twice.\");\r\n            return;\r\n        }\r\n\r\n        for (const feature of this.featureList) {\r\n            feature.start();\r\n        }\r\n\r\n        this._lastUpdate = new Date().getTime() / 1000;\r\n        this._tickInterval = Number(setInterval(() => this.update(), this.TICK_DURATION * 1000));\r\n\r\n        this.state = GameState.Playing;\r\n        console.debug(\"Game Started\");\r\n    }\r\n\r\n    public pause(): void {\r\n        if (this.state !== GameState.Playing) {\r\n            this.printStateWarning(\"Cannot pause the game if we're not playing.\");\r\n            return;\r\n        }\r\n        clearInterval(this._tickInterval);\r\n\r\n        this.state = GameState.Paused;\r\n        console.debug(\"Game Paused\");\r\n    }\r\n\r\n\r\n    public resume(): void {\r\n        if (this.state !== GameState.Paused) {\r\n            this.printStateWarning(\"Cannot resume the game if we're not paused.\");\r\n            return;\r\n        }\r\n\r\n        this._lastUpdate = new Date().getTime() / 1000;\r\n        // this._tickInterval = setInterval(() => this.update(), this.TICK_DURATION * 1000);\r\n\r\n        this.state = GameState.Playing;\r\n        console.debug(\"Game Resumed\");\r\n    }\r\n\r\n    /**\r\n     * Stop the main update loop\r\n     */\r\n    public stop(): void {\r\n        if (this.state === GameState.Stopped) {\r\n            this.printStateWarning(\"Cannot stop the game if we're already stopped.\");\r\n            return;\r\n        }\r\n        clearInterval(this._tickInterval);\r\n\r\n        for (const feature of this.featureList) {\r\n            feature.stop();\r\n        }\r\n\r\n        this.state = GameState.Stopped;\r\n        console.debug(\"Stopped\");\r\n    }\r\n\r\n    /**\r\n     * Recursively save all registered features\r\n     */\r\n    public save(): void {\r\n        const res: Record<string, unknown> = {};\r\n        for (const feature of this.featureList) {\r\n            res[feature.saveKey] = feature.save()\r\n        }\r\n        LocalStorage.store(this.SAVE_KEY, res)\r\n        this._onSave.dispatch();\r\n    }\r\n\r\n    /**\r\n     * Delete the locally stored save\r\n     */\r\n    public deleteSave(): void {\r\n        LocalStorage.delete(this.SAVE_KEY);\r\n    }\r\n\r\n    /**\r\n     * Recursively load all registered features\r\n     */\r\n    public load(): void {\r\n        const saveData = LocalStorage.get(this.SAVE_KEY)\r\n        if (saveData == null) {\r\n            return;\r\n        }\r\n        for (const feature of this.featureList) {\r\n            const featureSaveData: Record<string, unknown> = saveData[feature.saveKey] as Record<string, unknown>;\r\n            if (featureSaveData == null) {\r\n                continue;\r\n            }\r\n            feature.load(featureSaveData);\r\n        }\r\n    }\r\n\r\n    private printStateWarning(reason: string): void {\r\n        console.warn(`Current state = ${this.state}.`, reason);\r\n    }\r\n\r\n    private get featureList(): Feature[] {\r\n        return Object.values(this.features)\r\n    }\r\n}\r\n","export enum CurrencyType {\r\n    Money = \"Money\",\r\n    Souls = \"Souls\",\r\n    Wood = \"Wood\",\r\n    Grain = \"Grain\",\r\n    Bronze = \"Bronze\",\r\n    Silver = \"Silver\",\r\n    Gold = \"Gold\",\r\n    Salt = \"Salt\",\r\n    Diamond = \"Diamonds\",\r\n    Scrap = \"Scrap\",\r\n}\r\n","export enum SettingId {\r\n  ShowSaveMessage = \"Show save message\",\r\n  ShowUnobtainedCards = \"Show unobtained cards\",\r\n}\r\n","export enum StatisticId {\r\n    TotalScrapGained = \"total-scrap-gained\",\r\n    TotalOilGained = \"total-oil-gained\",\r\n    TotalGasolineGained = \"total-gasoline-gained\",\r\n    TotalLightningGained = \"total-lighting-gained\",\r\n    TotalPlutoniumGained = \"total-plutonium-gained\",\r\n    TotalScrapGainedThisPrestige = \"total-scrap-gained-this-prestige\",\r\n    TotalOilGainedThisPrestige = \"total-oil-gained-this-prestige\",\r\n    TotalGasolineGainedThisPrestige = \"total-gasoline-gained-this-prestige\",\r\n    TotalLightningGainedThisPrestige = \"total-lighting-gained-this-prestige\",\r\n    TotalPlutoniumGainedThisPrestige = \"total-plutonium-gained-this-prestige\",\r\n    TotalMoneyGained = \"total-money-gained\",\r\n}","export enum AchievementId {\r\n    PlayedGobletOfFire = \"played-goblet-of-fire\",\r\n    PlayedFrozen2 = \"played-frozen-2\",\r\n    EnemyPlayedForestFire = \"enemy-played-forest-fire\",\r\n    AtLeastOneSuperPower = \"at-least-one-superpower\",\r\n    AllSuperPowers = \"all-super-powers\",\r\n    TotalMoney100 = \"100-total-money\",\r\n    TotalMoney1000 = \"1000-total-money\",\r\n    TotalMoney10000 = \"10000-total-money\",\r\n    FirstLevelCompleted = \"first-level-completed\",\r\n    WizardLevelCompleted = \"farm-level-completed\",\r\n    FarmLevelCompleted = \"wizard-level-completed\",\r\n    DragonLevelCompleted = \"dragon-level-completed\",\r\n    SpiderLevelCompleted = \"spider-level-completed\",\r\n    TrollLevelCompleted = \"troll-level-completed\",\r\n    NecromancerLevelCompleted = \"necromancer-level-completed\",\r\n    Played100Resources = \"played-100-resources\",\r\n    Played100Monsters = \"played-100-monsters\",\r\n    Played100Actions = \"played-100-actions\",\r\n    Played100Curses = \"played-100-curses\",\r\n    Played100Tools = \"played-100-tools\",\r\n}","export enum UpgradeType {\r\n    ScrapManual,\r\n    ScrapAutomation,\r\n    ScrapValue,\r\n    ScrapAutomationSpeed,\r\n    ScrapAutomationACriticalChance,\r\n}\r\n","export enum TimeLineState {\r\n    Scrap,\r\n    Gasoline,\r\n    Lightning,\r\n    FluxCapacitor\r\n}\r\n","import {Saveable} from \"@/engine/tools/saving/Saveable\";\r\nimport {SaveData} from \"@/engine/tools/saving/SaveData\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Features} from \"@/engine/Features\";\r\nimport {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\n\r\n/**\r\n * An abstract class that all features should extend for.\r\n */\r\nexport abstract class Feature implements Saveable {\r\n\r\n    /**\r\n     * Initialize all feature attributes.\r\n     * Note that you should not assume other features exist already here\r\n     * @param saveKey\r\n     */\r\n    protected constructor(saveKey: string) {\r\n        this.saveKey = saveKey;\r\n    }\r\n\r\n    /**\r\n     * Called in dev mode, decides which fields to show in the developer panel.\r\n     */\r\n    getDeveloperPanelFields(): AbstractField[] {\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * Called after all features are created.\r\n     * Can be used to subscribe to other features events\r\n     */\r\n    initialize(features: Features): void {\r\n        // This method intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Runs when the game gets started. Can be run multiple times if the player can stop the game\r\n     */\r\n    start(): void {\r\n        // This method intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Runs when the game gets stopped. NOT when the game closes\r\n     */\r\n    stop(): void {\r\n        // This method intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Default false to avoid not implementing the proper restrictions\r\n     */\r\n    canAccess(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Override in features if specified\r\n     * IMPORTANT: Make sure to always return 1 as the default\r\n     */\r\n    getTotalCurrencyMultiplier(type: CurrencyType) {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Gets called every Game.TICK_DURATION\r\n     * @param delta time since last update\r\n     */\r\n    update(delta: number): void {\r\n        // Override in subclass if needed\r\n    }\r\n\r\n    // Saving logic\r\n    saveKey: string;\r\n\r\n    abstract load(data: SaveData): void;\r\n\r\n    abstract save(): SaveData;\r\n\r\n\r\n}\r\n","import {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\n\r\nexport class NumberField extends AbstractField {\r\n\r\n\r\n    constructor(propertyName: string, label?: string) {\r\n        super(propertyName, label);\r\n        this.setComponentName('igt-number-field');\r\n    }\r\n\r\n}","import {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\n\r\nexport class RangeField extends AbstractField {\r\n\r\n    min: number;\r\n    max: number\r\n    step: number\r\n\r\n    constructor(propertyName: string, min: number = 0, max: number = 100, step = 1, label?: string) {\r\n        super(propertyName, label);\r\n        this.min = min;\r\n        this.max = max;\r\n        this.step = step;\r\n        this.setComponentName('igt-range-field');\r\n    }\r\n\r\n}","import {Currency} from \"./Currency\";\r\nimport {CurrencyType} from \"./CurrencyType\";\r\n\r\nimport {ISimpleEvent, SimpleEventDispatcher} from \"strongly-typed-events\";\r\nimport {Feature} from \"@/engine/features/Feature\";\r\nimport {WalletSaveData} from \"@/engine/features/wallet/WalletSaveData\";\r\nimport {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\nimport {NumberField} from \"@/engine/developer-panel/fields/NumberField\";\r\nimport {FunctionField} from \"@/engine/developer-panel/fields/FunctionField\";\r\nimport {RangeField} from \"@/engine/developer-panel/fields/RangeField\";\r\n\r\n\r\nexport class Wallet extends Feature {\r\n    private _currencies: Record<CurrencyType, number> = {} as Record<CurrencyType, number>\r\n    private _multipliers: Record<CurrencyType, number> = {} as Record<CurrencyType, number>\r\n\r\n    private _onCurrencyGain = new SimpleEventDispatcher<Currency>();\r\n\r\n    private readonly _supportedCurrencies: CurrencyType[];\r\n\r\n    constructor(supportedCurrencies: CurrencyType[]) {\r\n        super(\"wallet\");\r\n\r\n        this._supportedCurrencies = supportedCurrencies;\r\n\r\n        // Initialize currencies and multipliers\r\n        for (const type of this._supportedCurrencies) {\r\n            this._currencies[type as CurrencyType] = 0;\r\n            this._multipliers[type as CurrencyType] = 1;\r\n        }\r\n    }\r\n\r\n    public resetTemporaryCurrencies() {\r\n        this._currencies[CurrencyType.Wood] = 0;\r\n        this._currencies[CurrencyType.Grain] = 0;\r\n        this._currencies[CurrencyType.Souls] = 0;\r\n        this._currencies[CurrencyType.Bronze] = 0;\r\n        this._currencies[CurrencyType.Silver] = 0;\r\n        this._currencies[CurrencyType.Gold] = 0;\r\n    }\r\n\r\n    public getAmount(type: CurrencyType): number {\r\n        if (!this.supportsCurrencyType(type)) {\r\n            return 0;\r\n        }\r\n        return this._currencies[type];\r\n    }\r\n\r\n    /**\r\n     * Gain the specified currency and apply the global multiplier\r\n     */\r\n    public gainCurrency(currency: Currency): void {\r\n        currency.multiply(this.getCurrencyMultiplier(currency.type));\r\n\r\n        if (!currency.isValid() || !this.supportsCurrencyType(currency.type)) {\r\n            console.warn(`Could not add currency ${currency.toString()}`);\r\n            return;\r\n        }\r\n\r\n        this._onCurrencyGain.dispatch(currency);\r\n        this._currencies[currency.type] += currency.amount;\r\n    }\r\n\r\n    /**\r\n     * Return true if the currency is valid and the player has the specified amount.\r\n     */\r\n    public hasCurrency(currency: Currency): boolean {\r\n        if (!this.supportsCurrencyType(currency.type)) {\r\n            return false;\r\n        }\r\n        return this._currencies[currency.type] >= currency.amount;\r\n    }\r\n\r\n    /**\r\n     * Return true if all currencies are valid and the player has the specified amount.\r\n     */\r\n    hasCurrencies(costs: Currency[]) {\r\n        for (const cost of costs) {\r\n            if (!this.hasCurrency(cost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Remove the currency amount from the specified currency.\r\n     * IMPORTANT: This method does not care if amounts go negative\r\n     * @param currency\r\n     */\r\n    public loseCurrency(currency: Currency): void {\r\n        if (!currency.isValid() || !this.supportsCurrencyType(currency.type)) {\r\n            console.warn(`Could not lose currency ${currency.toString()}`);\r\n            return;\r\n        }\r\n        this._currencies[currency.type] -= currency.amount;\r\n    }\r\n\r\n    public loseAll() {\r\n        this._currencies[CurrencyType.Money] = 0;\r\n        this._currencies[CurrencyType.Scrap] = 0;\r\n        this._currencies[CurrencyType.Salt] = 0;\r\n        this._currencies[CurrencyType.Diamond] = 0;\r\n    }\r\n\r\n    public loseMultipleCurrencies(currencies: Currency[]) {\r\n        for (const currency of currencies) {\r\n            this.loseCurrency(currency);\r\n        }\r\n    }\r\n\r\n    public payMultipleIfPossible(currencies: Currency[]): boolean {\r\n        if (this.hasCurrencies(currencies)) {\r\n            this.loseMultipleCurrencies(currencies);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Subtracts the specified currency and returns true if the wallet has enough.\r\n     * Otherwise return false and don't subtract anything\r\n     * @param currency\r\n     * @constructor\r\n     */\r\n    public payIfPossible(currency: Currency): boolean {\r\n        if (this.hasCurrency(currency)) {\r\n            this.loseCurrency(currency);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Return 1 if the multiplier is not set\r\n     */\r\n    public getCurrencyMultiplier(type: CurrencyType): number {\r\n        return this._multipliers[type] ?? 1;\r\n    }\r\n\r\n    public setCurrencyMultiplier(multiplier: number, type: CurrencyType): void {\r\n        if (multiplier <= 0 || isNaN(multiplier) || !this.supportsCurrencyType(type)) {\r\n            return;\r\n        }\r\n        this._multipliers[type] = multiplier;\r\n    }\r\n\r\n    public supportsCurrencyType(type: CurrencyType): boolean {\r\n        return this._supportedCurrencies.includes(type);\r\n    }\r\n\r\n    public canAccess(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public save(): WalletSaveData {\r\n        return {\r\n            money: this._currencies[CurrencyType.Money],\r\n        }\r\n    }\r\n\r\n    public load(data: WalletSaveData): void {\r\n        this._currencies[CurrencyType.Money] = data.money ?? this._currencies[CurrencyType.Money];\r\n    }\r\n\r\n    /**\r\n     * Emitted whenever a currency is gained\r\n     * @private\r\n     */\r\n    public get onCurrencyGain(): ISimpleEvent<Currency> {\r\n        return this._onCurrencyGain.asEvent();\r\n    }\r\n\r\n    public get money(): number {\r\n        return this._currencies.Money;\r\n    }\r\n\r\n    public set money(value: number) {\r\n        this._currencies.Money = value;\r\n    }\r\n\r\n    public get wood(): number {\r\n        return this._currencies.Wood;\r\n    }\r\n\r\n    public get grain(): number {\r\n        return this._currencies.Grain;\r\n    }\r\n\r\n    public get souls(): number {\r\n        return this._currencies.Souls;\r\n    }\r\n\r\n    public get bronze(): number {\r\n        return this._currencies.Bronze;\r\n    }\r\n\r\n    public get silver(): number {\r\n        return this._currencies.Silver;\r\n    }\r\n\r\n    public get gold(): number {\r\n        return this._currencies.Gold;\r\n    }\r\n\r\n    public get diamond(): number {\r\n        return this._currencies.Diamonds;\r\n    }\r\n\r\n    public get scrap(): number {\r\n        return this._currencies.Scrap;\r\n    }\r\n\r\n    getDeveloperPanelFields(): AbstractField[] {\r\n        return [\r\n            new NumberField('money', 'Money'),\r\n            new FunctionField(() => {\r\n                this.money = 10\r\n            }, 'Set money to 10').setCssClass('btn-blue'),\r\n            new RangeField('money', 0, 100, 2, 'Money Slider'),\r\n        ]\r\n    }\r\n}\r\n","export class Progress {\r\n    actual: number;\r\n    target: number;\r\n\r\n    constructor(actual: number, target: number) {\r\n        this.actual = actual;\r\n        this.target = target;\r\n    }\r\n}\r\n","import {Progress} from \"./Progress\";\r\n\r\n/**\r\n * Abstract class that can be configured to whatever requirements you like.\r\n */\r\nexport abstract class Requirement {\r\n\r\n    // Getters as the user should view these as attributes\r\n\r\n    get isCompleted(): boolean {\r\n        return this.actualValue >= this.targetValue;\r\n    }\r\n\r\n    get progress(): Progress {\r\n        return new Progress(Math.min(this.actualValue, this.targetValue), this.targetValue);\r\n    }\r\n\r\n    abstract get hint(): string;\r\n\r\n    abstract get actualValue(): number;\r\n\r\n    abstract get targetValue(): number;\r\n}\r\n","import {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\n\r\n/**\r\n * A requirement that is always completed\r\n */\r\nexport class NoRequirement extends Requirement {\r\n\r\n    get isCompleted(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get actualValue(): number {\r\n        return 0;\r\n    }\r\n\r\n    get hint(): string {\r\n        return \"\";\r\n    }\r\n\r\n    get targetValue(): number {\r\n        return 0;\r\n    }\r\n}\r\n","import {SettingId} from \"@/engine/features/settings/SettingId\";\r\nimport {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {NoRequirement} from \"@/engine/tools/requirements/NoRequirement\";\r\nimport {SettingOption} from \"@/engine/features/settings/SettingOption\";\r\n\r\n\r\nexport abstract class Setting<T> {\r\n    id: SettingId;\r\n    displayName: string;\r\n    options: SettingOption<T>[];\r\n    defaultValue: T;\r\n    value: T;\r\n\r\n    requirement: Requirement;\r\n\r\n    protected constructor(id: SettingId, displayName: string, options: SettingOption<T>[], defaultValue: T, requirement: Requirement = new NoRequirement()) {\r\n        this.id = id;\r\n        this.displayName = displayName;\r\n        this.options = options;\r\n        this.defaultValue = defaultValue;\r\n\r\n        this.value = defaultValue;\r\n\r\n        this.requirement = requirement;\r\n    }\r\n\r\n    set(value: T): void {\r\n        if (!this.canAccess) {\r\n            return;\r\n        }\r\n        if (this.validValue(value)) {\r\n            this.value = value;\r\n        } else {\r\n            console.warn(`${value} is not a valid value for setting ${this.id}. It could be that the option is not yet unlocked.`);\r\n        }\r\n    }\r\n\r\n    validValue(value: T): boolean {\r\n        const option = this.options.find((option) => option.value === value);\r\n        if (option == undefined || !option.canAccess) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isSelected(value: T): boolean {\r\n        return this.value === value;\r\n    }\r\n\r\n    get canAccess(): boolean {\r\n        return this.requirement.isCompleted\r\n    }\r\n\r\n}\r\n","import {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {NoRequirement} from \"@/engine/tools/requirements/NoRequirement\";\r\n\r\nexport class SettingOption<T> {\r\n    displayText: string;\r\n    value: T;\r\n\r\n    requirement: Requirement;\r\n\r\n\r\n    constructor(displayText: string, value: T, requirement: Requirement = new NoRequirement()) {\r\n        this.displayText = displayText;\r\n        this.value = value;\r\n        this.requirement = requirement;\r\n    }\r\n\r\n    get canAccess() {\r\n        return this.requirement.isCompleted;\r\n    }\r\n}\r\n","import {Setting} from \"@/engine/features/settings/Setting\";\r\nimport {SettingId} from \"@/engine/features/settings/SettingId\";\r\nimport {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {SettingOption} from \"@/engine/features/settings/SettingOption\";\r\n\r\n/**\r\n * A setting that can only be on or off.\r\n * The options can't have requirements but this can be solved by using the correct defaultValue and requirement.\r\n */\r\nexport class BooleanSetting extends Setting<boolean> {\r\n\r\n    constructor(id: SettingId, displayName: string, defaultValue: boolean, requirement?: Requirement) {\r\n        super(id, displayName, [\r\n            new SettingOption<boolean>(\"On\", true),\r\n            new SettingOption<boolean>(\"Off\", false)\r\n        ], defaultValue, requirement);\r\n    }\r\n\r\n    public toggle(): void {\r\n        this.value = !this.value;\r\n    }\r\n}\r\n","import {Feature} from \"@/engine/features/Feature\";\r\nimport {SettingsSaveData} from \"@/engine/features/settings/SettingsSaveData\";\r\nimport {Setting} from \"@/engine/features/settings/Setting\";\r\nimport {SettingId} from \"@/engine/features/settings/SettingId\";\r\nimport {AbstractField} from \"@/engine/developer-panel/fields/AbstractField\";\r\nimport {FunctionField} from \"@/engine/developer-panel/fields/FunctionField\";\r\nimport {BooleanSetting} from \"@/engine/features/settings/BooleanSetting\";\r\n\r\nexport class Settings extends Feature {\r\n    list: Setting<any>[];\r\n\r\n    constructor() {\r\n        super(\"settings\");\r\n        this.list = [];\r\n    }\r\n\r\n    add(setting: Setting<any>) {\r\n        if (!this.getSetting(setting.id)) {\r\n            this.list.push(setting);\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.add(new BooleanSetting(SettingId.ShowSaveMessage, \"Show save message\", true))\r\n    }\r\n\r\n    setSetting<T>(id: SettingId, value: T) {\r\n        const setting = this.getSetting(id);\r\n        if (setting) {\r\n            setting.set(value);\r\n        } else {\r\n            console.warn(`Setting ${id} does not exist`);\r\n        }\r\n\r\n    }\r\n\r\n    getSetting<T>(id: SettingId): Setting<T> | null {\r\n        for (let i = 0; i < this.list.length; i++) {\r\n            if (this.list[i].id == id) {\r\n                return this.list[i];\r\n            }\r\n        }\r\n        console.warn(`Setting ${id} does not exist`);\r\n        return null;\r\n    }\r\n\r\n\r\n    load(data: SettingsSaveData): void {\r\n        for (const settingSave of data.list) {\r\n            this.getSetting(settingSave.id)?.set(settingSave.value);\r\n        }\r\n    }\r\n\r\n    save(): SettingsSaveData {\r\n\r\n        return {\r\n            list: this.list.map(setting => {\r\n                return {\r\n                    id: setting.id,\r\n                    value: setting.value\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getDeveloperPanelFields(): AbstractField[] {\r\n        return [\r\n            new FunctionField(() => {\r\n                alert('test')\r\n            }, 'Test'),\r\n        ]\r\n    }\r\n\r\n}\r\n","import {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\nimport {StatisticsValue} from \"@/engine/features/statistics/StatisticsValueType\";\r\n\r\nexport abstract class AbstractStatistic {\r\n    id: StatisticId;\r\n    description: string;\r\n    abstract value: StatisticsValue;\r\n\r\n    protected constructor(id: StatisticId, description: string) {\r\n        this.id = id;\r\n        this.description = description;\r\n    }\r\n\r\n}","import {AbstractStatistic} from \"@/engine/features/statistics/AbstractStatistic\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\n\r\nexport class NumberStatistic extends AbstractStatistic {\r\n    value: number;\r\n\r\n    constructor(id: StatisticId, description: string, value: number = 0) {\r\n        super(id, description);\r\n        this.value = value;\r\n    }\r\n\r\n}","import {StatisticsValue} from \"./StatisticsValueType\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\n\r\nexport class StatisticsSaveData {\r\n    list: Record<StatisticId, StatisticsValue>;\r\n\r\n    constructor() {\r\n        this.list = {} as Record<StatisticId, StatisticsValue>;\r\n    }\r\n\r\n    addStatistic(id: StatisticId, value: StatisticsValue): void {\r\n        this.list[id] = value;\r\n    }\r\n\r\n}","import {AbstractStatistic} from \"@/engine/features/statistics/AbstractStatistic\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\n\r\nexport class ArrayStatistic extends AbstractStatistic {\r\n    value: number[];\r\n\r\n    constructor(id: StatisticId, description: string, value: number[]) {\r\n        super(id, description);\r\n        this.value = value;\r\n    }\r\n\r\n\r\n}","/**\r\n * Statistics class to keep track of increasing numbers\r\n */\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\nimport {NumberStatistic} from \"@/engine/features/statistics/NumberStatistic\";\r\nimport {Feature} from \"@/engine/features/Feature\";\r\nimport {AbstractStatistic} from \"@/engine/features/statistics/AbstractStatistic\";\r\nimport {StatisticsSaveData} from \"@/engine/features/statistics/StatisticsSaveData\";\r\nimport {StatisticsValue} from \"@/engine/features/statistics/StatisticsValueType\";\r\nimport {Features} from \"@/engine/Features\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {ArrayStatistic} from \"@/engine/features/statistics/ArrayStatistic\";\r\n\r\nexport class Statistics extends Feature {\r\n\r\n    list: Record<StatisticId, AbstractStatistic>\r\n\r\n\r\n    constructor() {\r\n        super('statistics');\r\n        this.list = {} as Record<StatisticId, AbstractStatistic>;\r\n    }\r\n\r\n    initialize(features: Features): void {\r\n        this.registerStatistic(new NumberStatistic(StatisticId.TotalMoneyGained, 'Total money'))\r\n        this.registerStatistic(new NumberStatistic(StatisticId.TotalScrapGained, 'Total scrap'))\r\n        this.registerStatistic(new NumberStatistic(StatisticId.TotalScrapGainedThisPrestige, 'Total scrap this prestige'))\r\n\r\n        features.wallet.onCurrencyGain.subscribe((currency: Currency) => {\r\n            if (currency.type === CurrencyType.Money) {\r\n                this.incrementNumberStatistic(StatisticId.TotalMoneyGained, currency.amount);\r\n            }\r\n            if (currency.type === CurrencyType.Scrap) {\r\n                this.incrementNumberStatistic(StatisticId.TotalScrapGained, currency.amount)\r\n                this.incrementNumberStatistic(StatisticId.TotalScrapGainedThisPrestige, currency.amount)\r\n            }\r\n        });\r\n    }\r\n\r\n    getCurrencyStatisticThisPrestige(type: CurrencyType): NumberStatistic {\r\n        switch (type) {\r\n            case CurrencyType.Scrap: {\r\n                return this.getStatistic(StatisticId.TotalScrapGainedThisPrestige) as NumberStatistic;\r\n            }\r\n            default: {\r\n                return this.getStatistic(StatisticId.TotalScrapGainedThisPrestige) as NumberStatistic;\r\n            }\r\n        }\r\n    }\r\n\r\n    incrementNumberStatistic(id: StatisticId, amount = 1): void {\r\n        if (!this.hasStatistic(id)) {\r\n            console.warn(`Could not find statistic with id ${id}`)\r\n            return;\r\n        }\r\n        const statistic = this.list[id];\r\n        if (statistic instanceof NumberStatistic) {\r\n            statistic.value += amount;\r\n        }\r\n    }\r\n\r\n    incrementArrayStatistic(id: StatisticId, index: number, amount = 1): void {\r\n        if (!this.hasStatistic(id)) {\r\n            console.warn(`Could not find statistic with id ${id}`)\r\n            return;\r\n        }\r\n        const statistic = this.list[id];\r\n        if (statistic instanceof ArrayStatistic) {\r\n            const newValue = statistic.value[index] + amount;\r\n            statistic.value.splice(index, 1, newValue)\r\n        }\r\n    }\r\n\r\n    public getStatistic(id: StatisticId): AbstractStatistic | null {\r\n        if (!this.hasStatistic(id)) {\r\n            console.warn(`Could not find statistic with id ${id}`)\r\n            return null;\r\n        } else {\r\n            return this.list[id];\r\n        }\r\n    }\r\n\r\n    private hasStatistic(id: StatisticId): boolean {\r\n        return id in this.list\r\n    }\r\n\r\n    public registerStatistic(statistic: AbstractStatistic) {\r\n        this.list[statistic.id] = statistic;\r\n    }\r\n\r\n    load(data: StatisticsSaveData): void {\r\n        for (const id in data.list) {\r\n            if (Object.prototype.hasOwnProperty.call(data.list, id)) {\r\n                if (this.hasStatistic(id as StatisticId)) {\r\n                    this.list[id as StatisticId].value = data.list[id as StatisticId];\r\n                } else {\r\n                    console.warn(`Could not load statistic ${id}`)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parseSaveData(json: Record<string, unknown>): StatisticsSaveData {\r\n        const data = new StatisticsSaveData();\r\n        const list = json.list as Record<string, StatisticsValue>;\r\n        for (const id in list) {\r\n            if (Object.prototype.hasOwnProperty.call(list, id)) {\r\n                data.addStatistic(id as StatisticId, list[id])\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    save(): StatisticsSaveData {\r\n        const data = new StatisticsSaveData();\r\n        for (const id in this.list) {\r\n            data.addStatistic(id as StatisticId, this.list[id as StatisticId].value);\r\n        }\r\n        return data;\r\n    }\r\n\r\n}","import {AchievementId} from \"@/engine/features/achievements/AchievementId\";\r\nimport {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {Progress} from \"@/engine/tools/requirements/Progress\";\r\n\r\nexport class Achievement {\r\n    public key: AchievementId;\r\n    public title: string;\r\n    public description: string;\r\n    public image: string;\r\n    public requirement: Requirement;\r\n\r\n    public unlocked: boolean\r\n\r\n    constructor(key: AchievementId, title: string, description: string, image: string, requirement: Requirement) {\r\n        this.key = key;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.image = image;\r\n        this.requirement = requirement;\r\n        this.unlocked = false\r\n    }\r\n\r\n    /**\r\n     * Unlock this achievement if possible.\r\n     * Returns true if the achievement was just unlocked!\r\n     */\r\n    unlock(): boolean {\r\n        if (!this.unlocked) {\r\n            this.unlocked = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    requirementsCompleted(): boolean {\r\n        return this.requirement.isCompleted;\r\n    }\r\n\r\n    getProgress(): Progress {\r\n        return this.requirement.progress;\r\n    }\r\n\r\n\r\n}\r\n","import {SaveData} from \"@/engine/tools/saving/SaveData\";\r\nimport {AchievementId} from \"@/engine/features/achievements/AchievementId\";\r\n\r\n/**\r\n * Unlocked achievements are saved as a list of keys\r\n */\r\nexport class AchievementsSaveData implements SaveData {\r\n    list: AchievementId[];\r\n\r\n    constructor() {\r\n        this.list = [];\r\n    }\r\n\r\n    addAchievement(key: AchievementId): void {\r\n        this.list.push(key);\r\n    }\r\n\r\n}","import {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\n\r\n/**\r\n * A requirement that can be manually set to be completed\r\n */\r\nexport class ManualRequirement extends Requirement {\r\n    isSet: boolean\r\n\r\n    constructor() {\r\n        super();\r\n        this.isSet = false;\r\n    }\r\n\r\n    forceCompletion(): void {\r\n        this.isSet = true;\r\n    }\r\n\r\n    get isCompleted(): boolean {\r\n        return this.isSet;\r\n    }\r\n\r\n    get actualValue(): number {\r\n        return this.isSet ? this.targetValue : 0;\r\n    }\r\n\r\n    get hint(): string {\r\n        return \"Can only be manually completed\";\r\n    }\r\n\r\n    get targetValue(): number {\r\n        return 1;\r\n    }\r\n}\r\n","import {Achievement} from \"@/engine/features/achievements/Achievement\";\r\nimport {ManualRequirement} from \"@/engine/tools/requirements/ManualRequirement\";\r\nimport {AchievementId} from \"@/engine/features/achievements/AchievementId\";\r\n\r\nexport class CustomAchievement extends Achievement {\r\n\r\n    constructor(key: AchievementId, title: string, description: string, image: string) {\r\n        super(key, title, description, image, new ManualRequirement());\r\n    }\r\n\r\n    forceComplete() {\r\n        (this.requirement as ManualRequirement).forceCompletion();\r\n    }\r\n}","import {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {NumberStatistic} from \"@/engine/features/statistics/NumberStatistic\";\r\n\r\nexport class NumberStatisticRequirement extends Requirement {\r\n    statistic: NumberStatistic;\r\n    targetValue: number;\r\n\r\n\r\n    constructor(statistic: NumberStatistic, targetValue: number) {\r\n        super();\r\n        this.statistic = statistic;\r\n        this.targetValue = targetValue;\r\n    }\r\n\r\n    getTargetValue(): number {\r\n        return this.targetValue;\r\n    }\r\n\r\n    get actualValue(): number {\r\n        return this.statistic.value;\r\n    }\r\n\r\n    get hint(): string {\r\n        return `The statistic ${this.statistic.description} needs to be at least ${this.targetValue}`;\r\n    }\r\n}","import {Achievement} from \"@/engine/features/achievements/Achievement\";\r\nimport {AchievementId} from \"@/engine/features/achievements/AchievementId\";\r\nimport {Feature} from \"@/engine/features/Feature\";\r\nimport {AchievementsSaveData} from \"@/engine/features/achievements/AchievementSaveData\";\r\nimport {Features} from \"@/engine/Features\";\r\nimport {ArrayStatisticRequirement} from \"@/engine/features/statistics/requirements/ArrayStatisticRequirement\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\nimport {ArrayStatistic} from \"@/engine/features/statistics/ArrayStatistic\";\r\nimport {ISimpleEvent, SimpleEventDispatcher} from \"strongly-typed-events\";\r\nimport {CustomAchievement} from \"@/engine/features/achievements/CustomAchievement\";\r\nimport {NumberStatisticRequirement} from \"@/engine/features/statistics/requirements/NumberStatisticRequirement\";\r\nimport {NumberStatistic} from \"@/engine/features/statistics/NumberStatistic\";\r\n\r\nexport class Achievements extends Feature {\r\n    name: string = \"Achievements\";\r\n    saveKey: string = 'achievements';\r\n\r\n    list: Record<AchievementId, Achievement>\r\n\r\n    // Delay between checking for achievements\r\n    private readonly ACHIEVEMENT_CHECK_TIME: number = 2.0;\r\n    private checkCounter: number = 0;\r\n\r\n    private _onUnlock = new SimpleEventDispatcher<Achievement>();\r\n\r\n    /**\r\n     * Emitted whenever an achievement is unlocked.\r\n     */\r\n    public get onUnlock(): ISimpleEvent<Achievement> {\r\n        return this._onUnlock.asEvent();\r\n    }\r\n\r\n    constructor() {\r\n        super('achievements');\r\n        this.list = {} as Record<AchievementId, Achievement>;\r\n    }\r\n\r\n    initialize(features: Features): void {\r\n        this.registerAchievement(\r\n            new CustomAchievement(AchievementId.AtLeastOneSuperPower,\r\n                \"I wonder what inspired this feature\",\r\n                'Go on an Adventure with at least one bonus',\r\n                'cards/hatchet-bronze.svg',\r\n            )\r\n        );\r\n        this.registerAchievement(\r\n            new Achievement(AchievementId.TotalMoney100,\r\n                \"It's something\",\r\n                'Gain 100 money in total',\r\n                'coins.svg',\r\n                new NumberStatisticRequirement(features.statistics.getStatistic(StatisticId.TotalMoneyGained) as NumberStatistic, 100),\r\n            ),\r\n        );\r\n        this.registerAchievement(\r\n            new Achievement(AchievementId.TotalMoney1000,\r\n                \"It's a bit more\",\r\n                'Gain 1000 money in total',\r\n                'coins.svg',\r\n                new NumberStatisticRequirement(features.statistics.getStatistic(StatisticId.TotalMoneyGained) as NumberStatistic, 1000),\r\n            ),\r\n        );\r\n        this.registerAchievement(\r\n            new Achievement(AchievementId.TotalMoney10000,\r\n                \"This is where the fun begins\",\r\n                'Gain 10000 money in total',\r\n                'coins.svg',\r\n                new NumberStatisticRequirement(features.statistics.getStatistic(StatisticId.TotalMoneyGained) as NumberStatistic, 10000),\r\n            ),\r\n        );\r\n    }\r\n\r\n    update(delta: number) {\r\n        this.checkCounter += delta;\r\n        if (this.checkCounter >= this.ACHIEVEMENT_CHECK_TIME) {\r\n            this.checkForAchievementsCompleted();\r\n            this.checkCounter = 0;\r\n        }\r\n    }\r\n\r\n    public checkForAchievementsCompleted() {\r\n        for (const key in this.list) {\r\n            const achievement = this.list[key as AchievementId];\r\n            if (achievement.requirementsCompleted()) {\r\n                const isJustUnlocked = achievement.unlock();\r\n                if (isJustUnlocked) {\r\n                    this._onUnlock.dispatch(achievement);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerAchievement(achievement: Achievement) {\r\n        this.list[achievement.key] = achievement;\r\n    }\r\n\r\n    public getAchievement(key: AchievementId): Achievement | null {\r\n        if (!this.hasAchievement(key)) {\r\n            console.warn(`Could not find achievement with key ${key}`)\r\n\r\n            return null;\r\n        } else {\r\n            return this.list[key];\r\n        }\r\n    }\r\n\r\n    private hasAchievement(key: AchievementId): boolean {\r\n        return key in this.list\r\n    }\r\n\r\n\r\n    load(data: AchievementsSaveData): void {\r\n        for (const key of data.list) {\r\n            const achievement = this.getAchievement(key);\r\n            if (achievement !== null) {\r\n                achievement.unlocked = true\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    save(): AchievementsSaveData {\r\n        const data = new AchievementsSaveData();\r\n        for (const key in this.list) {\r\n            if (this.list[key as AchievementId].unlocked) {\r\n                data.addAchievement(key as AchievementId);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n}","export class SaveData {\r\n\r\n    constructor() {\r\n        // This constructor intentionally left blank\r\n    }\r\n}\r\n","import {SaveData} from \"@/engine/features/saving/SaveData\";\r\n\r\nexport class ScrapSaveData extends SaveData {\r\n\r\n}\r\n","export class UpgradeListSaveData<UpgradeSaveDataType> {\r\n    upgrades: UpgradeSaveDataType[]\r\n\r\n    constructor() {\r\n        this.upgrades = [];\r\n    }\r\n\r\n    addUpgrade(upgrade: UpgradeSaveDataType): void {\r\n        this.upgrades.push(upgrade);\r\n    }\r\n}\r\n","import {Upgrade} from \"@/engine/features/upgrades/Upgrade\";\r\nimport {Saveable} from \"@/engine/features/saving/Saveable\";\r\nimport {UpgradeListSaveData} from \"@/engine/features/upgrades/UpgradeListSaveData\";\r\nimport {UpgradeSaveData} from \"@/engine/features/upgrades/UpgradeSaveData\";\r\nimport {UpgradeType} from \"@/engine/features/upgrades/UpgradeType\";\r\n\r\nexport class UpgradeList<GenericUpgrade extends Upgrade, GenericUpgradeSaveData extends UpgradeSaveData> implements Saveable {\r\n    list: GenericUpgrade[];\r\n\r\n\r\n    constructor(list: GenericUpgrade[]) {\r\n        this.list = list;\r\n    }\r\n\r\n    addUpgrade(upgrade: GenericUpgrade): void {\r\n        this.list.push(upgrade)\r\n    }\r\n\r\n    getUpgrade(key: string): Upgrade | null {\r\n        for (const upgrade of this.list) {\r\n            if (upgrade.id === key) {\r\n                return upgrade;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getTotalMultiplierForType(type: UpgradeType): number {\r\n        let multiplier = 1;\r\n        for (const upgrade of this.list.filter(upgrade => upgrade.type === type)) {\r\n            multiplier *= upgrade.getBonus(upgrade.level);\r\n        }\r\n        return multiplier;\r\n    }\r\n\r\n    saveKey: string = \"upgrades\";\r\n\r\n    load(data: UpgradeListSaveData<GenericUpgradeSaveData>): void {\r\n        for (const upgradeSave of data.upgrades) {\r\n            const upgrade = this.getUpgrade(upgradeSave.key);\r\n            if (upgrade == null) {\r\n                console.warn(`Could not load upgrade ${upgradeSave.key}`);\r\n            } else {\r\n                upgrade.load(upgradeSave);\r\n            }\r\n        }\r\n    }\r\n\r\n    parseSaveData(json: Record<string, unknown>): UpgradeListSaveData<GenericUpgradeSaveData> {\r\n        const data = new UpgradeListSaveData<GenericUpgradeSaveData>();\r\n        const list = json?.upgrades as GenericUpgradeSaveData[];\r\n        if (list == null) {\r\n            return data;\r\n        }\r\n        for (const key of list) {\r\n            data.addUpgrade(key);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    save(): UpgradeListSaveData<GenericUpgradeSaveData> {\r\n        const data = new UpgradeListSaveData<GenericUpgradeSaveData>();\r\n        for (const upgrade of this.list) {\r\n            data.addUpgrade(upgrade.save() as GenericUpgradeSaveData);\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n}\r\n","import {CurrencyType} from \"./CurrencyType\";\r\n\r\n/**\r\n * A class to store currency amounts\r\n */\r\nexport class Currency {\r\n    amount: number;\r\n    type: CurrencyType;\r\n\r\n    constructor(amount: number, type: CurrencyType) {\r\n        this.amount = amount;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Whether or not this currency is valid. Your game can have different rules\r\n     */\r\n    public isValid(): boolean {\r\n        if (isNaN(this.amount)) {\r\n            return false;\r\n        }\r\n        return this.amount >= 0;\r\n    }\r\n\r\n    public toString(): string {\r\n        return `${this.amount} ${this.type}`;\r\n    }\r\n\r\n    // Math methods as TS does not support operator overloading\r\n    public add(amount: number) {\r\n        this.amount += amount;\r\n    }\r\n\r\n    public subtract(amount: number) {\r\n        this.amount -= amount;\r\n    }\r\n\r\n    public multiply(amount: number) {\r\n        this.amount *= amount;\r\n    }\r\n\r\n    public divide(amount: number) {\r\n        if (amount === 0) {\r\n            console.error(`Cannot divide ${this} by 0`);\r\n            return;\r\n        }\r\n        this.amount /= amount;\r\n    }\r\n}\r\n","import {Currency} from \"./Currency\";\r\nimport {CurrencyType} from \"./CurrencyType\";\r\n\r\nexport abstract class CurrencyBuilder {\r\n\r\n    static createArray(amounts: number[], type: CurrencyType): Currency[] {\r\n        return amounts.map(amount => new Currency(amount, type));\r\n    }\r\n}\r\n","export class UpgradeSaveData {\r\n    key: string;\r\n    level: number;\r\n\r\n    constructor(key: string, level: number) {\r\n        this.key = key;\r\n        this.level = level;\r\n    }\r\n}\r\n","import {Saveable} from \"@/engine/features/saving/Saveable\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {App} from \"@/App\";\r\nimport {UpgradeSaveData} from \"@/engine/features/upgrades/UpgradeSaveData\";\r\nimport {UpgradeType} from \"@/engine/features/upgrades/UpgradeType\";\r\nimport { random } from \"lodash-es\";\r\n\r\n/**\r\n * Generic upgrade class\r\n */\r\n\r\nexport abstract class Upgrade implements Saveable {\r\n    id: string = String(Math.random());\r\n    type: UpgradeType;\r\n    displayName: string;\r\n    maxLevel: number;\r\n    level: number;\r\n\r\n    // Describes whether this upgrade increases or decreases a number.\r\n    // (e.g. power is increasing, time is decreasing).\r\n    increasing: boolean;\r\n\r\n\r\n    protected constructor(id: string, type: UpgradeType, displayName: string, maxLevel: number, increasing = true) {\r\n        this.id = id;\r\n        this.type = type;\r\n        this.displayName = displayName;\r\n        this.maxLevel = maxLevel;\r\n        this.level = 0;\r\n        this.increasing = increasing;\r\n\r\n    }\r\n\r\n    abstract getCost(): Currency;\r\n\r\n    abstract getBonus(level: number): number;\r\n\r\n    getUpgradeBonus(): number {\r\n        if (!this.isMaxLevel()) {\r\n            return this.getBonus(this.level + 1) - this.getBonus(this.level);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isMaxLevel(): boolean {\r\n        return this.level >= this.maxLevel;\r\n    }\r\n\r\n    canAfford(): boolean {\r\n        return App.game.features.wallet.hasCurrency(this.getCost());\r\n    }\r\n\r\n    // Override in subclass when other requirements exist.\r\n    canBuy(): boolean {\r\n        return this.level < this.maxLevel && this.canAfford();\r\n    }\r\n\r\n    buy(): void {\r\n        if (this.canBuy()) {\r\n            App.game.features.wallet.loseCurrency(this.getCost());\r\n            this.levelUp();\r\n        }\r\n    }\r\n\r\n    levelUp(): void {\r\n        this.level = this.level + 1;\r\n    }\r\n\r\n\r\n    // Save logic\r\n    saveKey: string = this.id;\r\n\r\n    load(data: UpgradeSaveData): void {\r\n        this.level = data.level;\r\n    }\r\n\r\n    parseSaveData(json: Record<string, unknown>): UpgradeSaveData {\r\n        return new UpgradeSaveData(json?.id as string, json?.level as number ?? 0)\r\n    }\r\n\r\n    save(): UpgradeSaveData {\r\n        return new UpgradeSaveData(this.id, this.level)\r\n    }\r\n\r\n}\r\n","import {Upgrade} from \"@/engine/features/upgrades/Upgrade\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {UpgradeType} from \"@/engine/features/upgrades/UpgradeType\";\r\n\r\nexport class DiscreteUpgrade extends Upgrade {\r\n\r\n    costList: Currency[] = [];\r\n    bonusList: number[] = []\r\n\r\n    constructor(id: string, type: UpgradeType, displayName: string, maxLevel: number, costList: Currency[], bonusList: number[], increasing: boolean) {\r\n        super(id, type, displayName, maxLevel, increasing);\r\n        this.costList = costList;\r\n        this.bonusList = bonusList;\r\n    }\r\n\r\n    getCost(): Currency {\r\n        if (this.isMaxLevel()) {\r\n            return new Currency(Infinity, CurrencyType.Scrap);\r\n        }\r\n        return this.costList[this.level];\r\n    }\r\n\r\n\r\n    getBonus(level: number = this.level): number {\r\n        return this.bonusList[level];\r\n    }\r\n\r\n}\r\n","import {DiscreteUpgrade} from \"@/engine/features/upgrades/DiscreteUpgrade\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {UpgradeType} from \"@/engine/features/upgrades/UpgradeType\";\r\n\r\n/**\r\n * An upgrade with a max level of 1\r\n */\r\nexport class SingleLevelUpgrade extends DiscreteUpgrade {\r\n\r\n    constructor(id: string, type: UpgradeType, displayName: string, cost: Currency, bonus: number) {\r\n        super(id, type, displayName, 1, [cost], [0, bonus], true);\r\n    }\r\n\r\n    isBought(): boolean {\r\n        return this.isMaxLevel();\r\n    }\r\n\r\n}\r\n","import {MultiRequirement} from \"@/engine/tools/requirements/MultiRequirement\";\r\n\r\nexport abstract class ProgressBar {\r\n    value: number;\r\n    goal: number;\r\n\r\n    isStarted: boolean;\r\n    requirements: MultiRequirement;\r\n\r\n    protected constructor(goal: number, requirements: MultiRequirement) {\r\n        this.value = 0;\r\n        this.goal = goal;\r\n        this.isStarted = false;\r\n        this.requirements = requirements;\r\n    }\r\n\r\n    public start() {\r\n        if (this.isStarted) {\r\n            console.warn(\"Cannot start twice\");\r\n            return;\r\n        }\r\n        this.isStarted = true;\r\n        this.value = 0;\r\n    }\r\n\r\n    public progress(delta: number) {\r\n        if (!this.isStarted) {\r\n            if (this.canRepeat()) {\r\n                this.start();\r\n            }\r\n            return;\r\n        }\r\n        this.value = Math.min(this.goal, this.value + delta);\r\n\r\n        if (this.isCompleted()) {\r\n            this.complete();\r\n        }\r\n    }\r\n\r\n    get percentage() {\r\n        return this.value / this.goal;\r\n    }\r\n\r\n    public abstract canRepeat(): boolean;\r\n\r\n    public repeat() {\r\n        this.value = 0;\r\n    }\r\n\r\n    public isCompleted() {\r\n        return this.value >= this.goal;\r\n    }\r\n\r\n    public complete() {\r\n        this.gainReward();\r\n        if (this.canRepeat()) {\r\n            this.repeat();\r\n        } else {\r\n            this.value = 0;\r\n            this.isStarted = false;\r\n        }\r\n\r\n    }\r\n\r\n    abstract gainReward(): void;\r\n}\r\n","import {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\n\r\n/**\r\n * All requirements in the provided list need to be completed for this requirement to be completed.\r\n */\r\nexport class MultiRequirement extends Requirement {\r\n    requirements: Requirement[];\r\n\r\n    constructor(requirements: Requirement[]) {\r\n        super();\r\n        this.requirements = requirements;\r\n    }\r\n\r\n    get isCompleted() {\r\n        return this.requirements.every(requirement => {\r\n            return requirement.isCompleted;\r\n        });\r\n    }\r\n\r\n    get hint(): string {\r\n        let hint = \"Complete the following requirements:\\n\";\r\n        for (const req of this.requirements) {\r\n            hint += req.hint + \"\\n\";\r\n        }\r\n        return hint;\r\n    }\r\n\r\n    get actualValue(): number {\r\n        let completed = 0;\r\n\r\n        for (const req of this.requirements) {\r\n            if (req.isCompleted) {\r\n                completed++;\r\n            }\r\n        }\r\n        return completed;\r\n    }\r\n\r\n    get targetValue(): number {\r\n        return this.requirements.length;\r\n    }\r\n\r\n\r\n}\r\n","import {ProgressBar} from \"@/engine/progressbars/ProgressBar\";\r\nimport {App} from \"@/App\";\r\nimport {MultiRequirement} from \"@/engine/tools/requirements/MultiRequirement\";\r\nimport {SingleLevelUpgrade} from \"@/engine/features/upgrades/SingleLevelUpgrade\";\r\nimport {DiscreteUpgrade} from \"@/engine/features/upgrades/DiscreteUpgrade\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\n\r\nexport class ScrapAction extends ProgressBar {\r\n    description: string;\r\n    automationUpgrade: string;\r\n    valueUpgrade: string;\r\n\r\n    constructor(description: string, goal: number, automationUpgrade: string, valueUpgrade: string, requirements: MultiRequirement = new MultiRequirement([])) {\r\n        super(goal, requirements);\r\n        this.description = description;\r\n        this.automationUpgrade = automationUpgrade;\r\n        this.valueUpgrade = valueUpgrade\r\n    }\r\n\r\n    canRepeat(): boolean {\r\n        return (App.game.features.scrap.upgrades.getUpgrade(this.automationUpgrade) as SingleLevelUpgrade).isBought();\r\n    }\r\n\r\n    scrapReward(): number {\r\n        const upgrade = (App.game.features.scrap.upgrades.getUpgrade(this.valueUpgrade) as DiscreteUpgrade);\r\n        return upgrade.getBonus();\r\n    }\r\n\r\n    gainReward(): void {\r\n        return App.game.features.wallet.gainCurrency(new Currency(this.scrapReward(), CurrencyType.Scrap));\r\n\r\n    }\r\n\r\n}\r\n","import {App} from \"@/App\";\r\nimport {Requirement} from \"@/engine/tools/requirements/Requirement\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\n\r\nexport class StatisticRequirement extends Requirement {\r\n    id: StatisticId;\r\n    targetValue: number;\r\n\r\n\r\n    constructor(id: StatisticId, targetValue: number) {\r\n        super();\r\n        this.id = id;\r\n        this.targetValue = targetValue;\r\n    }\r\n\r\n    lockedReason(): string {\r\n        return `The statistic ${App.game.features.statistics.getStatistic(this.id)?.id} needs to be at least ${this.targetValue}`;\r\n    }\r\n\r\n    getActualValue(): number {\r\n        return App.game.features.statistics.getStatistic(this.id)?.value as number;\r\n    }\r\n\r\n    getTargetValue(): number {\r\n        return this.targetValue;\r\n    }\r\n    \r\n    get actualValue(): number {\r\n        return App.game.features.statistics.getStatistic(this.id)?.value as number;\r\n    }\r\n\r\n    get hint(): string {\r\n        return `The statistic ${App.game.features.statistics.getStatistic(this.id)?.description} needs to be at least ${this.targetValue}`;\r\n    }\r\n}\r\n","import {Feature} from \"@/engine/features/Feature\";\r\nimport {ScrapSaveData} from \"@/engine/features/scrap/ScrapSaveData\";\r\nimport {App} from \"@/App\";\r\nimport {UpgradeList} from \"@/engine/features/upgrades/UpgradeList\";\r\nimport {Upgrade} from \"@/engine/features/upgrades/Upgrade\";\r\nimport {UpgradeSaveData} from \"@/engine/features/upgrades/UpgradeSaveData\";\r\nimport {UpgradeType} from \"@/engine/features/upgrades/UpgradeType\";\r\nimport {CurrencyBuilder} from \"@/engine/features/wallet/CurrencyBuilder\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {DiscreteUpgrade} from \"@/engine/features/upgrades/DiscreteUpgrade\";\r\nimport {SingleLevelUpgrade} from \"@/engine/features/upgrades/SingleLevelUpgrade\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {ScrapAction} from \"@/engine/features/scrap/ScrapAction\";\r\nimport {MultiRequirement} from \"@/engine/tools/requirements/MultiRequirement\";\r\nimport {StatisticRequirement} from \"@/engine/features/statistics/requirements/StatisticRequirement\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\n\r\nexport class Scrap extends Feature {\r\n    name: string = \"Scrap\";\r\n    saveKey: string = \"scrap\";\r\n\r\n    upgrades: UpgradeList<Upgrade, UpgradeSaveData>;\r\n\r\n    actions: ScrapAction[]\r\n\r\n    constructor() {\r\n        super(\"scrap\");\r\n        this.upgrades = new UpgradeList<Upgrade, UpgradeSaveData>(\r\n            [\r\n                new SingleLevelUpgrade(\"scrap-unlock-dig-automation\", UpgradeType.ScrapAutomation, \"Automatically dig for scraps\", new Currency(30, CurrencyType.Scrap), 1),\r\n                new SingleLevelUpgrade(\"scrap-unlock-metal-detector-automation\", UpgradeType.ScrapAutomation, \"Automate your metal detector\", new Currency(150, CurrencyType.Scrap), 1),\r\n                new SingleLevelUpgrade(\"scrap-unlock-recycle-automation\", UpgradeType.ScrapAutomation, \"Automatically recycle stuff\", new Currency(500, CurrencyType.Scrap), 1),\r\n                new SingleLevelUpgrade(\"scrap-unlock-plunder-copper-automation\", UpgradeType.ScrapAutomation, \"Automatically plunder copper\", new Currency(1000, CurrencyType.Scrap), 1),\r\n\r\n                new DiscreteUpgrade(\"scrap-dig-value\", UpgradeType.ScrapValue, \"Dig value\", 9,\r\n                    CurrencyBuilder.createArray([5, 10, 25, 50, 100, 250, 500, 750, 1000, 2500], CurrencyType.Scrap),\r\n                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], true),\r\n                new DiscreteUpgrade(\"scrap-metal-detector-value\", UpgradeType.ScrapValue, \"Metal detector value\", 9,\r\n                    CurrencyBuilder.createArray([25, 50, 100, 250, 500, 750, 1000, 2500, 5000, 10000], CurrencyType.Scrap),\r\n                    [5, 10, 15, 20, 25, 30, 35, 40, 45, 50], true),\r\n                new DiscreteUpgrade(\"scrap-recycle-value\", UpgradeType.ScrapValue, \"Recycle value\", 9,\r\n                    CurrencyBuilder.createArray([500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500], CurrencyType.Scrap),\r\n                    [25, 50, 75, 100, 125, 150, 175, 200, 225, 250], true),\r\n                new DiscreteUpgrade(\"scrap-plunder-copper-value\", UpgradeType.ScrapValue, \"Copper value\", 9,\r\n                    CurrencyBuilder.createArray([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000], CurrencyType.Scrap),\r\n                    [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], true),\r\n                new DiscreteUpgrade(\"scrap-automation-speed\", UpgradeType.ScrapAutomationSpeed, \"Speedup all actions\", 10,\r\n                    CurrencyBuilder.createArray([50, 100, 250, 500, 750, 1000, 2500, 5000, 7500, 10000], CurrencyType.Scrap),\r\n                    [1, 1.5, 2.0, 2.5, 3, 4, 5, 7.5, 10, 12.5, 15, 20], true),\r\n            ]\r\n        );\r\n\r\n        this.actions = [\r\n            new ScrapAction(\"Dig for scraps\", 2, \"scrap-unlock-dig-automation\", \"scrap-dig-value\"),\r\n            new ScrapAction(\"Metal detector\", 6, \"scrap-unlock-metal-detector-automation\", \"scrap-metal-detector-value\", new MultiRequirement([new StatisticRequirement(StatisticId.TotalScrapGainedThisPrestige, 8)])),\r\n            new ScrapAction(\"Recycle stuff\", 20, \"scrap-unlock-recycle-automation\", \"scrap-recycle-value\", new MultiRequirement([new StatisticRequirement(StatisticId.TotalScrapGainedThisPrestige, 100)])),\r\n            new ScrapAction(\"Plunder copper \", 50, \"scrap-unlock-plunder-copper-automation\", \"scrap-plunder-copper-value\", new MultiRequirement([new StatisticRequirement(StatisticId.TotalScrapGainedThisPrestige, 1000)])),\r\n        ]\r\n    }\r\n\r\n\r\n    update(delta: number) {\r\n        if (!this.canAccess()) {\r\n            return;\r\n        }\r\n\r\n        const speedMultiplier = (this.upgrades.getUpgrade(\"scrap-automation-speed\") as DiscreteUpgrade).getBonus();\r\n        for (const action of this.actions) {\r\n            action.progress(delta * speedMultiplier);\r\n        }\r\n    }\r\n\r\n    load(data: ScrapSaveData): void {\r\n        // Empty\r\n    }\r\n\r\n\r\n    canAccess(): boolean {\r\n        // return App.game.features.timeLine.canAccessScrap;\r\n        return true;\r\n    }\r\n\r\n    parseSaveData(json: Record<string, unknown>): ScrapSaveData {\r\n        return new ScrapSaveData();\r\n    }\r\n\r\n    save(): ScrapSaveData {\r\n        return new ScrapSaveData();\r\n    }\r\n\r\n    reset() {\r\n        for (const upgrade of this.upgrades.list) {\r\n            upgrade.level = 0;\r\n        }\r\n        for (const action of this.actions) {\r\n            action.isStarted = false;\r\n            action.value = 0;\r\n        }\r\n    }\r\n}\r\n","import {SaveData} from \"@/engine/features/saving/SaveData\";\r\nimport {TimeLineState} from \"@/engine/features/timeline/TimeLineState\";\r\n\r\nexport class TimeLineSaveData extends SaveData {\r\n    state: TimeLineState;\r\n\r\n\r\n    constructor(state: TimeLineState) {\r\n        super();\r\n        this.state = state;\r\n    }\r\n}\r\n","import {Feature} from \"@/engine/features/Feature\";\r\nimport {TimeLineState} from \"@/engine/features/timeline/TimeLineState\";\r\nimport {TimeLineSaveData} from \"@/engine/features/timeline/TimeLineSaveData\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {App} from \"@/App\";\r\nimport {StatisticId} from \"@/engine/features/statistics/StatisticId\";\r\nimport {NumberStatistic} from \"@/engine/features/statistics/NumberStatistic\";\r\n\r\n\r\nexport class TimeLine extends Feature {\r\n    name: string = \"Timeline\";\r\n    saveKey: string = \"timeline\";\r\n\r\n    state: TimeLineState;\r\n\r\n    canAccessScrap: boolean = false;\r\n    canAccessGasoline: boolean = false;\r\n    canAccessLightning: boolean = false;\r\n    canAccessPlutonium: boolean = false;\r\n\r\n    public readonly SCRAP_GOAL: number = 10000;\r\n    public readonly GASOLINE_GOAL: number = 10000;\r\n    public readonly OIL_GOAL: number = 100;\r\n\r\n\r\n    public readonly START_STATE: TimeLineState = TimeLineState.Scrap;\r\n\r\n    constructor() {\r\n        super(\"timeline\");\r\n        this.state = this.START_STATE;\r\n    }\r\n\r\n\r\n    initialize() {\r\n        this.giveStartingCurrency();\r\n    }\r\n\r\n    update(delta: number) {\r\n        if (App.game.features.wallet.getAmount(CurrencyType.Scrap) > 0) {\r\n            this.canAccessScrap = true;\r\n        }\r\n    }\r\n\r\n    timeTravel() {\r\n        if (!this.canTimeTravel()) {\r\n            return;\r\n        }\r\n\r\n\r\n        App.game.features.wallet.loseAll();\r\n        App.game.features.scrap.reset();\r\n\r\n        // Reset prestige statistics\r\n        (App.game.features.statistics.getStatistic(StatisticId.TotalScrapGainedThisPrestige) as NumberStatistic).value = 0;\r\n\r\n        this.canAccessScrap = false;\r\n        this.canAccessGasoline = false;\r\n        this.canAccessLightning = false;\r\n        this.canAccessPlutonium = false;\r\n\r\n        this.state = Math.min(TimeLineState.FluxCapacitor, this.state + 1);\r\n        this.giveStartingCurrency();\r\n    }\r\n\r\n    canTimeTravel() {\r\n        return App.game.features.wallet.hasCurrency(new Currency(this.SCRAP_GOAL, CurrencyType.Scrap));\r\n    }\r\n\r\n    load(data: TimeLineSaveData): void {\r\n        this.state = data.state;\r\n    }\r\n\r\n    parseSaveData(json: Record<string, unknown>): TimeLineSaveData {\r\n        return new TimeLineSaveData(json.state as TimeLineState ?? this.START_STATE);\r\n    }\r\n\r\n    save(): TimeLineSaveData {\r\n        return new TimeLineSaveData(this.state);\r\n    }\r\n\r\n    private giveStartingCurrency() {\r\n        switch (this.state) {\r\n            case TimeLineState.Scrap:\r\n                App.game.features.wallet.gainCurrency(new Currency(1, CurrencyType.Scrap));\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import {Game} from \"@/engine/Game\";\r\nimport {Wallet} from \"@/engine/features/wallet/Wallet\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {Settings} from \"@/engine/features/settings/Settings\";\r\nimport { Statistics } from \"@/engine/features/statistics/Statistics\";\r\nimport { Achievements } from \"@/engine/features/achievements/Achievements\";\r\nimport { Scrap } from \"@/engine/features/scrap/Scrap\";\r\nimport { TimeLine } from \"@/engine/features/timeline/TimeLine\";\r\n\r\nexport class App {\r\n    static inProduction: boolean = (process.env.NODE_ENV === \"production\");\r\n\r\n    static game: Game;\r\n\r\n    static start(): void {\r\n        this.game = this.getDefaultGame();\r\n        this.game.initialize();\r\n        this.game.load();\r\n        this.game.start();\r\n    }\r\n\r\n    public static getDefaultGame(): Game {\r\n        const game = new Game(\r\n            {\r\n                settings: new Settings(),\r\n                wallet: new Wallet([\r\n                    CurrencyType.Money,\r\n                    CurrencyType.Diamond,\r\n                    CurrencyType.Scrap,\r\n                ]),\r\n                statistics: new Statistics(),\r\n                achievements: new Achievements(),\r\n                scrap: new Scrap(),\r\n                timeLine: new TimeLine(),\r\n            }\r\n        );\r\n        return game;\r\n    }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('notificationGroup',{attrs:{\"group\":\"top-left\"}},[_c('div',{staticClass:\"z-50 fixed inset-0 flex px-4 py-6 pointer-events-none p-6 items-start justify-start\"},[_c('div',{staticClass:\"max-w-sm w-full\"},[_c('notification',{scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar notifications = ref.notifications;\nreturn _vm._l((notifications),function(notification){return _c('div',{key:notification.id,staticClass:\"max-w-sm w-full mx-auto bg-white shadow-md rounded-lg overflow-hidden mt-4\"},[_c('igt-notification',{attrs:{\"notification\":notification}})],1)})}}])})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flex\"},[_c('div',{staticClass:\"flex justify-center items-center w-12\",class:_vm.backgroundColor},[_c('div',{staticClass:\"text-xl fa\",class:_vm.icon})]),_c('div',{staticClass:\"-mx-3 py-2 px-4\"},[_c('div',{staticClass:\"mx-3\"},[_c('span',{staticClass:\"font-semibold\",class:_vm.textColor},[_vm._v(_vm._s(_vm.notification.title))]),_c('p',{staticClass:\"text-gray-600 text-sm\"},[_vm._v(_vm._s(_vm.notification.text))])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"flex\">\r\n    <div class=\"flex justify-center items-center w-12\" :class=\"backgroundColor\">\r\n      <div class=\"text-xl fa\" :class=\"icon\"></div>\r\n    </div>\r\n\r\n    <div class=\"-mx-3 py-2 px-4\">\r\n      <div class=\"mx-3\">\r\n        <span class=\"font-semibold\" :class=\"textColor\">{{ notification.title }}</span>\r\n        <p class=\"text-gray-600 text-sm\">{{ notification.text }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"igt-notification\",\r\n  props: {\r\n    notification: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    textColor() {\r\n      switch (this.notification.type) {\r\n        case 'success':\r\n          return 'text-green-500'\r\n        case 'error':\r\n          return 'text-red-500'\r\n        default:\r\n          return 'text-gray-500';\r\n      }\r\n    },\r\n    backgroundColor() {\r\n      switch (this.notification.type) {\r\n        case 'success':\r\n          return 'bg-green-500'\r\n        case 'error':\r\n          return 'bg-red-500'\r\n        default:\r\n          return 'bg-gray-500';\r\n      }\r\n    },\r\n    icon() {\r\n      switch (this.notification.type) {\r\n        case 'success':\r\n          return 'fa-check'\r\n        case 'error':\r\n          return 'fa-times'\r\n        default:\r\n          return 'fa-question';\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./igt-notification.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./igt-notification.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./igt-notification.vue?vue&type=template&id=15afe98b&scoped=true&\"\nimport script from \"./igt-notification.vue?vue&type=script&lang=js&\"\nexport * from \"./igt-notification.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15afe98b\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <notificationGroup group=\"top-left\">\r\n    <div\r\n        class=\"z-50 fixed inset-0 flex px-4 py-6 pointer-events-none p-6 items-start justify-start\"\r\n    >\r\n      <div class=\"max-w-sm w-full\">\r\n        <notification v-slot=\"{notifications}\">\r\n          <div\r\n              class=\"max-w-sm w-full mx-auto bg-white shadow-md rounded-lg overflow-hidden mt-4\"\r\n              v-for=\"notification in notifications\"\r\n              :key=\"notification.id\"\r\n          >\r\n            <igt-notification :notification=\"notification\"></igt-notification>\r\n          </div>\r\n        </notification>\r\n      </div>\r\n    </div>\r\n  </notificationGroup>\r\n</template>\r\n\r\n<script>\r\n\r\nimport IgtNotification from \"@/components/util/igt-notification\";\r\n\r\nexport default {\r\n  name: \"igt-notifications\",\r\n  components: {IgtNotification},\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./igt-notifications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./igt-notifications.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./igt-notifications.vue?vue&type=template&id=c1296ae4&scoped=true&\"\nimport script from \"./igt-notifications.vue?vue&type=script&lang=js&\"\nexport * from \"./igt-notifications.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c1296ae4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.canAccess)?_c('div',{staticClass:\"container\"},[_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(_vm._s(_vm._f(\"twoDigits\")(_vm.scrapAmount))+\" Scrap\")]),_c('div',{staticClass:\"action-list\"},_vm._l((_vm.availableActions),function(action){return _c('scrap-action',{key:action.description,attrs:{\"action\":action}})}),1),_c('br'),_c('div',{staticClass:\"upgrade-list\"},_vm._l((_vm.upgrades),function(upgrade){return _c('upgrade-component',{key:upgrade.id,attrs:{\"upgrade\":upgrade}})}),1)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show),expression:\"show\"}],staticClass:\"btn btn-primary upgrade\",class:{'disabled': !_vm.canBuy},on:{\"click\":_vm.buy}},[_c('p',[_vm._v(\" \"+_vm._s(_vm.upgrade.displayName)+\" \")]),(_vm.upgrade.isMaxLevel())?_c('div',[_vm._v(\"MAX\")]):_c('div',[_c('currency',{attrs:{\"currency\":_vm.cost}}),(_vm.upgrade.maxLevel !== 1)?_c('div',[_vm._v(\" Currently \"+_vm._s(_vm._f(\"twoDigits\")(_vm.upgrade.getBonus(_vm.upgrade.level)))+\" (\"+_vm._s(_vm.upgrade.increasing ? '+' : '-')+_vm._s(_vm._f(\"twoDigits\")(Math.abs(_vm.upgrade.getUpgradeBonus())))+\") \")]):_vm._e()],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._t(\"before\"),(_vm.brackets)?_c('span',[_vm._v(\"(\")]):_vm._e(),_vm._v(_vm._s(_vm.currency.amount)+\" \"+_vm._s(_vm.currencyType)),(_vm.brackets)?_c('span',[_vm._v(\")\")]):_vm._e(),_vm._t(\"after\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <p>\r\n      <slot name=\"before\">\r\n      </slot>\r\n\r\n      <span v-if=\"brackets\">(</span>{{ currency.amount }} {{ currencyType }}<span v-if=\"brackets\">)</span>\r\n\r\n      <slot name=\"after\">\r\n      </slot>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {Currency} from \"@/engine/features/wallet/Currency\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\n\r\nexport default {\r\n  name: \"CurrencyComponent\",\r\n\r\n  props: {\r\n    currency: {\r\n      type: Currency,\r\n      required: true,\r\n    },\r\n    brackets: {\r\n      type: Boolean,\r\n      required: false,\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currencyType() {\r\n      return CurrencyType[this.currency.type];\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Currency.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Currency.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Currency.vue?vue&type=template&id=1efcdb68&scoped=true&\"\nimport script from \"./Currency.vue?vue&type=script&lang=js&\"\nexport * from \"./Currency.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1efcdb68\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <button v-show=\"show\" @click=\"buy\" class=\"btn btn-primary upgrade\" :class=\"{'disabled': !canBuy}\">\r\n    <p> {{ upgrade.displayName }} </p>\r\n    <div v-if=\"upgrade.isMaxLevel()\">MAX</div>\r\n    <div v-else>\r\n      <currency :currency=\"cost\"></currency>\r\n      <div v-if=\"upgrade.maxLevel !== 1\">\r\n        Currently {{ upgrade.getBonus(upgrade.level) | twoDigits }}\r\n        ({{ upgrade.increasing ? '+' : '-' }}{{ Math.abs(upgrade.getUpgradeBonus()) | twoDigits }})\r\n      </div>\r\n    </div>\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nimport {Upgrade} from \"@/engine/features/upgrades/Upgrade\";\r\nimport CurrencyComponent from \"@/components/Currency.vue\";\r\nimport {App} from \"@/App\";\r\n\r\nexport default {\r\n  name: \"UpgradeComponent\",\r\n  components: {\r\n    'currency': CurrencyComponent\r\n  },\r\n  props: {\r\n    upgrade: {\r\n      type: Upgrade,\r\n      required: true\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    buy() {\r\n      this.upgrade.buy();\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    show() {\r\n      const statistic = App.game.features.statistics.getCurrencyStatisticThisPrestige(this.cost.type);\r\n      return this.upgrade.level > 0 || statistic.value >= this.cost.amount / 2;\r\n    },\r\n    cost() {\r\n      return this.upgrade.getCost();\r\n    },\r\n\r\n    canBuy() {\r\n      return this.upgrade.canBuy();\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.upgrade {\r\n  margin-right: 10px;\r\n  width: 200px;\r\n  flex-grow: 1;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Upgrade.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Upgrade.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Upgrade.vue?vue&type=template&id=1d07ca04&scoped=true&\"\nimport script from \"./Upgrade.vue?vue&type=script&lang=js&\"\nexport * from \"./Upgrade.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Upgrade.vue?vue&type=style&index=0&id=1d07ca04&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1d07ca04\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"btn scrap\",attrs:{\"data-progress-style\":\"fill-back\",\"disabled\":_vm.action.isStarted},on:{\"click\":_vm.start}},[_vm._v(\" \"+_vm._s(_vm.action.description)+\" (+\"+_vm._s(this.action.scrapReward())+\") \"),_c('div',{staticClass:\"progress\"},[_c('div',{staticClass:\"progress-bar\",style:({'width': _vm.action.percentage * 100 + '%'}),attrs:{\"role\":\"progressbar\",\"aria-valuenow\":_vm.action.percentage * 100,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <button @click=\"start\" class=\"btn scrap\" data-progress-style=\"fill-back\" :disabled=\"action.isStarted\">\r\n    {{ action.description }}\r\n    (+{{ this.action.scrapReward() }})\r\n    <div class=\"progress\">\r\n      <div class=\"progress-bar\" role=\"progressbar\" :aria-valuenow=\"action.percentage * 100\"\r\n           :style=\"{'width': action.percentage * 100 + '%'}\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </button>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport {ScrapAction} from \"@/engine/features/scrap/ScrapAction\";\r\n\r\nexport default {\r\n  name: \"ScrapAction\",\r\n  props: {\r\n    action: {\r\n      type: ScrapAction,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    start() {\r\n      this.action.start();\r\n    }\r\n  },\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scrap {\r\n  background-color: saddlebrown;\r\n  color: #e8e8e8;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  width: 200px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.progress-bar {\r\n  transition: none;\r\n}\r\n\r\n.progress {\r\n  margin-bottom: 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScrapAction.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScrapAction.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ScrapAction.vue?vue&type=template&id=6241cfc8&scoped=true&\"\nimport script from \"./ScrapAction.vue?vue&type=script&lang=js&\"\nexport * from \"./ScrapAction.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ScrapAction.vue?vue&type=style&index=0&id=6241cfc8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6241cfc8\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"container\" v-if=\"canAccess\">\r\n    <h3 style=\"text-align: center\">{{ scrapAmount | twoDigits }} Scrap</h3>\r\n    <div class=\"action-list\">\r\n      <scrap-action v-for=\"action in availableActions\" :key=\"action.description\" :action=\"action\">\r\n      </scrap-action>\r\n    </div>\r\n    <br>\r\n    <div class=\"upgrade-list\">\r\n      <upgrade-component v-for=\"upgrade in upgrades\" :key=\"upgrade.id\" :upgrade=\"upgrade\"></upgrade-component>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {App} from \"@/App\";\r\nimport UpgradeComponent from \"@/components/Upgrade\";\r\nimport ScrapAction from \"@/components/ScrapAction\";\r\n\r\nexport default {\r\n\r\n  name: \"ScrapComponent\",\r\n  components: {ScrapAction, UpgradeComponent},\r\n  data() {\r\n    return {\r\n      statistic: App.game.features.statistics,\r\n      scrap: App.game.features.scrap,\r\n      wallet: App.game.features.wallet,\r\n    }\r\n  },\r\n  methods: {},\r\n\r\n  computed: {\r\n    canAccess() {\r\n      return this.scrap.canAccess();\r\n    },\r\n\r\n    upgrades() {\r\n      return this.scrap.upgrades.list;\r\n    },\r\n    availableActions() {\r\n      return this.scrap.actions.filter(action => action.requirements.isCompleted);\r\n    },\r\n    scrapAmount() {\r\n      return this.wallet.scrap;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  border: 1px solid black;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.action-list {\r\n  display: flex;\r\n}\r\n\r\n.upgrade-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Scrap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Scrap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Scrap.vue?vue&type=template&id=6e94b7c2&scoped=true&\"\nimport script from \"./Scrap.vue?vue&type=script&lang=js&\"\nexport * from \"./Scrap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Scrap.vue?vue&type=style&index=0&id=6e94b7c2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e94b7c2\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('br'),_c('div',{staticClass:\"vefs-milestone-wrapper\"},[_c('div',{staticClass:\"milestone-container\"},[_c('div',{staticClass:\"chart-container\"},[_c('div',{staticClass:\"line-container\"},[_c('div',{staticClass:\"line\"}),_c('div',{staticClass:\"line left\",style:({'width': _vm.percentage * 100 + '%'})})]),_c('div',{staticClass:\"dot-container\"},[_c('div',{staticClass:\"milestones milestone__0\"},[_c('div',{staticClass:\"dot\",class:{'completed': _vm.percentage >= 0, 'colored': _vm.percentage >= 0}})]),_c('div',{staticClass:\"milestones milestone__40\"},[_c('div',{staticClass:\"dot\",class:{'completed': _vm.percentage >= 0.4, 'colored': _vm.percentage >= 0.4}})]),_c('div',{staticClass:\"milestones milestone__60\"},[_c('div',{staticClass:\"dot\",class:{'completed': _vm.percentage >= 0.6, 'colored': _vm.percentage >= 0.6}})]),_c('div',{staticClass:\"milestones milestone__80\"},[_c('div',{staticClass:\"dot\",class:{'completed': _vm.percentage >= 0.8, 'colored': _vm.percentage >= 0.8}})]),_c('div',{staticClass:\"milestones milestone__100\"},[_c('div',{staticClass:\"dot\",class:{'completed': _vm.percentage >= 1, 'colored': _vm.percentage >= 1}})])])]),_c('div',{staticClass:\"label-container\"},[_c('div',{staticClass:\"milestones milestone__0\"},[_c('div',{staticClass:\"label colored\"},[_vm._v(_vm._s(_vm.timeLine.state >= _vm.timeLineState.FluxCapacitor ? 'Flux Capacitor' : '???')+\" \")])]),_c('div',{staticClass:\"milestones milestone__40\"},[_c('div',{staticClass:\"label colored\"},[_vm._v(_vm._s(_vm.timeLine.state >= _vm.timeLineState.Lightning ? 'Lightning' : '???'))])]),_c('div',{staticClass:\"milestones milestone__60\"},[_c('div',{staticClass:\"label colored\"},[_vm._v(_vm._s(_vm.timeLine.state >= _vm.timeLineState.Gasoline ? 'Gasoline' : '???'))])]),_c('div',{staticClass:\"milestones milestone__80\"},[_c('div',{staticClass:\"label\"},[_vm._v(_vm._s(_vm.timeLine.state >= _vm.timeLineState.Scrap ? 'Scrap' : '???'))])]),_vm._m(0)])])]),_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[(_vm.timeLine.state !== _vm.timeLineState.FluxCapacitor)?_c('button',{staticClass:\"btn btn-primary\",staticStyle:{\"padding\":\"20px\",\"margin\":\"20px\"},attrs:{\"disabled\":!_vm.canTimeTravel},on:{\"click\":_vm.timeTravel}},[_vm._v(\" Reach \"+_vm._s(_vm.timeLine.SCRAP_GOAL)+\" Scrap to \"),(_vm.timeLine.state === _vm.timeLineState.Lightning)?_c('span',[_vm._v(\"Complete the game\")]):_c('span',[_vm._v(\"Time travel\")])]):_vm._e()])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"milestones milestone__100\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"Time Travel\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <br>\r\n    <div class=\"vefs-milestone-wrapper\">\r\n      <div class=\"milestone-container\">\r\n\r\n        <div class=\"chart-container\">\r\n          <div class=\"line-container\">\r\n            <div class=\"line\"></div>\r\n            <div class=\"line left\" :style=\"{'width': percentage * 100 + '%'}\"></div>\r\n          </div>\r\n\r\n          <div class=\"dot-container\">\r\n            <div class=\"milestones milestone__0\">\r\n              <div class=\"dot\" :class=\"{'completed': percentage >= 0, 'colored': percentage >= 0}\"></div>\r\n            </div>\r\n<!--            <div class=\"milestones milestone__20\">-->\r\n<!--              <div class=\"dot\" :class=\"{'completed': percentage >= 0.2, 'colored': percentage >= 0.2}\"></div>-->\r\n<!--            </div>-->\r\n            <div class=\"milestones milestone__40\">\r\n              <div class=\"dot\" :class=\"{'completed': percentage >= 0.4, 'colored': percentage >= 0.4}\"></div>\r\n            </div>\r\n            <div class=\"milestones milestone__60\">\r\n              <div class=\"dot\" :class=\"{'completed': percentage >= 0.6, 'colored': percentage >= 0.6}\"></div>\r\n            </div>\r\n            <div class=\"milestones milestone__80\">\r\n              <div class=\"dot\" :class=\"{'completed': percentage >= 0.8, 'colored': percentage >= 0.8}\"></div>\r\n            </div>\r\n            <div class=\"milestones milestone__100\">\r\n              <div class=\"dot\" :class=\"{'completed': percentage >= 1, 'colored': percentage >= 1}\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"label-container\">\r\n          <div class=\"milestones milestone__0\">\r\n            <div class=\"label colored\">{{ timeLine.state >= timeLineState.FluxCapacitor ? 'Flux Capacitor' : '???' }}\r\n            </div>\r\n          </div>\r\n<!--          <div class=\"milestones milestone__20\">-->\r\n<!--            <div class=\"label colored\">{{ timeLine.state >= timeLineState.Plutonium ? 'Plutonium' : '???' }}</div>-->\r\n<!--          </div>-->\r\n          <div class=\"milestones milestone__40\">\r\n            <div class=\"label colored\">{{ timeLine.state >= timeLineState.Lightning ? 'Lightning' : '???' }}</div>\r\n          </div>\r\n          <div class=\"milestones milestone__60\">\r\n            <div class=\"label colored\">{{ timeLine.state >= timeLineState.Gasoline ? 'Gasoline' : '???' }}</div>\r\n          </div>\r\n          <div class=\"milestones milestone__80\">\r\n            <div class=\"label\">{{ timeLine.state >= timeLineState.Scrap ? 'Scrap' : '???' }}</div>\r\n          </div>\r\n          <div class=\"milestones milestone__100\">\r\n            <div class=\"label\">Time Travel</div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div style=\"display: flex; justify-content: center;\">\r\n      <button v-if=\"timeLine.state !== timeLineState.FluxCapacitor\"\r\n          class=\"btn btn-primary\" @click=\"timeTravel\" :disabled=\"!canTimeTravel\" style=\"padding:20px; margin:20px\">\r\n        Reach {{ timeLine.SCRAP_GOAL }} Scrap to <span v-if=\"timeLine.state === timeLineState.Lightning\">Complete the game</span>\r\n        <span v-else>Time travel</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {App} from \"@/App\";\r\nimport {CurrencyType} from \"@/engine/features/wallet/CurrencyType\";\r\nimport {TimeLineState} from \"@/engine/features/timeline/TimeLineState\";\r\n\r\nexport default {\r\n\r\n  name: \"TimeLine\",\r\n  data() {\r\n    return {\r\n      timeLine: App.game.features.timeLine,\r\n      wallet: App.game.features.wallet,\r\n      timeLineState: TimeLineState,\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    timeTravel() {\r\n      this.timeLine.timeTravel();\r\n    },\r\n\r\n    logProgress(current, goal) {\r\n      if (current <= 1)\r\n        return 0;\r\n      return Math.log(current) / Math.log(goal);\r\n    }\r\n  },\r\n  computed: {\r\n    canTimeTravel() {\r\n      return this.timeLine.canTimeTravel();\r\n    },\r\n    percentage() {\r\n      if (this.timeLine.canAccessScrap) {\r\n        return Math.min(1, 0.8 + 0.2 * this.logProgress(App.game.features.wallet.getAmount(CurrencyType.Scrap), this.timeLine.SCRAP_GOAL));\r\n      } \r\n      return 0;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.progress-before {\r\n  float: left;\r\n}\r\n\r\n.progress-after {\r\n  float: right;\r\n}\r\n\r\n$milestone-base-color: #cccccc;\r\n$milestone-progress-color: #ffffff;\r\n$milestone-0-color: #ff0000;\r\n$milestone-20-color: #55ff00;\r\n$milestone-40-color: #FDD023;\r\n$milestone-60-color: #242020;\r\n$milestone-80-color: #825700;\r\n$milestone-100-color: #73d2de;\r\n\r\n\r\n.vefs-milestone-wrapper {\r\n  $component-height: 80px;\r\n  $line-height: 15px;\r\n  $dot-size: $line-height * 2.5;\r\n\r\n  .milestone-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    height: $component-height;\r\n\r\n    .chart-container {\r\n      display: flex;\r\n      flex-flow: column;\r\n      align-items: center;\r\n      flex: 1 75%;\r\n\r\n      .line-container {\r\n        position: absolute;\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        height: $dot-size;\r\n\r\n        .line {\r\n          align-self: center;\r\n          position: absolute;\r\n          top: calc($dot-size / 2);\r\n          transform: translateY(-50%);\r\n          order: 1;\r\n          width: 100%;\r\n          height: $line-height;\r\n          background-color: $milestone-base-color;\r\n          background-color: rgba($milestone-base-color, 0.5);\r\n\r\n          &.left {\r\n            order: 0;\r\n            background-color: $milestone-progress-color;\r\n          }\r\n        }\r\n      }\r\n\r\n      .dot-container {\r\n        position: absolute;\r\n        height: $dot-size;\r\n        width: 100%;\r\n\r\n        .dot {\r\n          position: absolute;\r\n          width: $dot-size;\r\n          height: $dot-size;\r\n          border-radius: 50%;\r\n          background-color: $milestone-base-color;\r\n          transform: translateX(-50%);\r\n          transition: all 0.25s ease-out;\r\n\r\n          &.completed {\r\n            background-color: $milestone-progress-color;\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    .label-container {\r\n      display: flex;\r\n      flex-flow: column nowrap;\r\n      align-items: flex-start;\r\n      flex: 1 50%;\r\n\r\n      .label {\r\n        position: relative;\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color: $milestone-base-color;\r\n\r\n        &.colored {\r\n          color: $milestone-progress-color;\r\n        }\r\n      }\r\n    }\r\n\r\n    .milestones {\r\n      position: absolute;\r\n      transform: translate(-50%, 0);\r\n\r\n      @mixin milestone( $mark, $color) {\r\n        &__#{$mark} {\r\n          left: #{$mark + '%'};\r\n\r\n          .dot {\r\n            &.colored {\r\n              background-color: rgba($color, 1);\r\n              transition: all 0.25s ease-out;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &.milestone {\r\n        // generate position and color of each milestone value\r\n        @for $i from 0 to 101 {\r\n          @if $i == 0 {\r\n            @include milestone($i, $milestone-0-color);\r\n          }\r\n          @if $i > 0 and $i <= 20 {\r\n            @include milestone($i, $milestone-20-color);\r\n          }\r\n          @if $i > 20 and $i <= 40 {\r\n            @include milestone($i, $milestone-40-color);\r\n          }\r\n          @if $i > 40 and $i <= 60 {\r\n            @include milestone($i, $milestone-60-color);\r\n          }\r\n          @if $i > 60 and $i <= 80 {\r\n            @include milestone($i, $milestone-80-color);\r\n          }\r\n          @if $i > 80 and $i <= 100 {\r\n            @include milestone($i, $milestone-100-color);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TimeLine.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TimeLine.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TimeLine.vue?vue&type=template&id=4ee22b2e&scoped=true&\"\nimport script from \"./TimeLine.vue?vue&type=script&lang=js&\"\nexport * from \"./TimeLine.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TimeLine.vue?vue&type=style&index=0&id=4ee22b2e&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4ee22b2e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <!-- <div :class=\"{'dark': darkMode}\"> -->\r\n    <div class=\"container\">\r\n      <!-- <igt-notifications></igt-notifications> -->\r\n      <!-- <ih-header></ih-header> -->\r\n      <time-line></time-line>\r\n      <div class=\"column\">\r\n        <div class=\"row\">\r\n          <scrap></scrap>\r\n        </div>\r\n      </div>\r\n      <!-- <ih-footer></ih-footer> -->\r\n    </div>\r\n  <!-- </div> -->\r\n\r\n</template>\r\n\r\n<script>\r\nimport {App} from \"@/App.ts\"\r\nimport IgtNotifications from \"@/components/util/igt-notifications\";\r\n// import IhHeader from \"@/components/ih-header\";\r\n// import IhFooter from \"@/components/ih-footer\";\r\nimport Scrap from \"@/components/features/Scrap\";\r\nimport TimeLine from \"@/components/features/TimeLine\"\r\n\r\nexport default {\r\n  components: {\r\n    // IgtNotifications,\r\n    // IhHeader,\r\n    // IhFooter,\r\n    TimeLine,\r\n    Scrap,\r\n  },\r\n  data() {\r\n    return {\r\n      game: App.game\r\n    }\r\n  },\r\n  computed: {\r\n    showDevPanel() {\r\n      return !App.inProduction;\r\n    },\r\n    darkMode() {\r\n      return true;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.column {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n</style>\r\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VueApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VueApp.vue?vue&type=template&id=074d6958&\"\nimport script from \"./VueApp.vue?vue&type=script&lang=js&\"\nexport * from \"./VueApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VueApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\n\r\nVue.filter('numberFormat', function (value: number) {\r\n    if (value == undefined) {\r\n        return \"\";\r\n    }\r\n    return value.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n})\r\n\r\nVue.filter('dateFormat', function (date: Date) {\r\n    if (date == undefined) {\r\n        return \"\";\r\n    }\r\n\r\n    const year = new Intl.DateTimeFormat('en', {year: 'numeric'}).format(date);\r\n    const month = new Intl.DateTimeFormat('en', {month: 'long'}).format(date);\r\n    const day = new Intl.DateTimeFormat('en', {day: '2-digit'}).format(date);\r\n\r\n    const hours = date.getHours();\r\n    const hoursString = hours < 10 ? `0${hours}` : `${hours}`;\r\n    const minutes = date.getMinutes();\r\n    const minutesString = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n\r\n    return `${day} ${month} ${year} ${hoursString}:${minutesString}`;\r\n\r\n})\r\n\r\nVue.filter('humanizeString', function (string: string) {\r\n    if (string == undefined) {\r\n        return \"\";\r\n    }\r\n    string = string.charAt(0).toUpperCase() + string.slice(1);\r\n    string.replace(\"_\", \" \").replace(\"-\", \" \");\r\n    return string;\r\n})\r\n\r\nVue.filter('twoDigits', function (value: number) {\r\n    return value.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n})\r\n","import Vue from 'vue'\r\nimport VueApp from './VueApp.vue'\r\nimport {App} from \"./App\";\r\n\r\nimport Notifications from \"vt-notifications\";\r\n\r\nimport './VueFilters';\r\n\r\n// import \"./index.css\";\r\nimport \"./index.scss\";\r\n\r\nVue.config.productionTip = false\r\n\r\nVue.use(Notifications);\r\n\r\ndeclare global {\r\n    interface Window {\r\n        App: App;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Start the application when all html elements are loaded.\r\n */\r\nwindow.onload = function () {\r\n    App.start();\r\n\r\n    // Expose the App class to the window (and the console)\r\n    if (!App.inProduction && typeof window !== undefined) {\r\n        console.log('Exposing App to console');\r\n        window.App = App;\r\n    }\r\n\r\n\r\n    console.log(\"Launched\");\r\n\r\n    new Vue({\r\n        render: h => h(VueApp),\r\n    }).$mount('#app')\r\n\r\n\r\n};\r\n\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkigt_vue\"] = self[\"webpackChunkigt_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4960); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["GameState","render","_vm","this","_h","$createElement","_c","_self","staticClass","staticRenderFns","LocalStorage","key","data","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","DeveloperPanel","constructor","tabs","DeveloperPanelTab","label","children","isEmpty","length","AbstractField","propertyName","cssClass","displayLabel","value","undefined","object","console","warn","setObject","setCssClass","setComponentName","name","componentName","FunctionField","func","super","DisplayField","ChoiceField","options","Game","onSave","_onSave","asEvent","features","SAVE_INTERVAL","SignalDispatcher","state","Launching","getDeveloperPanel","start","pause","resume","stop","feature","featureList","fields","getDeveloperPanelFields","field","tab","saveKey","push","update","now","Date","getTime","timeDifference","_lastUpdate","Playing","delta","gameSpeed","_nextSave","save","getTotalCurrencyMultiplier","type","multiplier","initialize","Stopped","_tickInterval","Number","setInterval","TICK_DURATION","debug","printStateWarning","clearInterval","Paused","res","store","SAVE_KEY","dispatch","deleteSave","load","saveData","get","featureSaveData","reason","Object","values","CurrencyType","SettingId","StatisticId","AchievementId","UpgradeType","TimeLineState","Feature","canAccess","NumberField","RangeField","min","max","step","Wallet","supportedCurrencies","SimpleEventDispatcher","_supportedCurrencies","_currencies","_multipliers","resetTemporaryCurrencies","Wood","Grain","Souls","Bronze","Silver","Gold","getAmount","supportsCurrencyType","gainCurrency","currency","multiply","getCurrencyMultiplier","isValid","_onCurrencyGain","amount","toString","hasCurrency","hasCurrencies","costs","cost","loseCurrency","loseAll","Money","Scrap","Salt","Diamond","loseMultipleCurrencies","currencies","payMultipleIfPossible","payIfPossible","setCurrencyMultiplier","isNaN","includes","money","onCurrencyGain","wood","grain","souls","bronze","silver","gold","diamond","Diamonds","scrap","Progress","actual","target","Requirement","isCompleted","actualValue","targetValue","progress","Math","NoRequirement","hint","Setting","id","displayName","defaultValue","requirement","set","validValue","option","find","isSelected","SettingOption","displayText","BooleanSetting","toggle","Settings","list","add","setting","getSetting","ShowSaveMessage","setSetting","i","settingSave","map","alert","AbstractStatistic","description","NumberStatistic","StatisticsSaveData","addStatistic","ArrayStatistic","Statistics","registerStatistic","TotalMoneyGained","TotalScrapGained","TotalScrapGainedThisPrestige","wallet","subscribe","incrementNumberStatistic","getCurrencyStatisticThisPrestige","getStatistic","hasStatistic","statistic","incrementArrayStatistic","index","newValue","splice","prototype","hasOwnProperty","call","parseSaveData","json","Achievement","title","image","unlocked","unlock","requirementsCompleted","getProgress","AchievementsSaveData","addAchievement","ManualRequirement","isSet","forceCompletion","CustomAchievement","forceComplete","NumberStatisticRequirement","getTargetValue","Achievements","onUnlock","_onUnlock","registerAchievement","AtLeastOneSuperPower","TotalMoney100","statistics","TotalMoney1000","TotalMoney10000","checkCounter","ACHIEVEMENT_CHECK_TIME","checkForAchievementsCompleted","achievement","isJustUnlocked","getAchievement","hasAchievement","SaveData","ScrapSaveData","UpgradeListSaveData","upgrades","addUpgrade","upgrade","UpgradeList","getUpgrade","getTotalMultiplierForType","filter","getBonus","level","upgradeSave","Currency","subtract","divide","error","CurrencyBuilder","amounts","UpgradeSaveData","Upgrade","maxLevel","increasing","String","random","getUpgradeBonus","isMaxLevel","canAfford","App","game","getCost","canBuy","buy","levelUp","DiscreteUpgrade","costList","bonusList","Infinity","SingleLevelUpgrade","bonus","isBought","ProgressBar","goal","requirements","isStarted","complete","canRepeat","percentage","repeat","gainReward","MultiRequirement","every","req","completed","ScrapAction","automationUpgrade","valueUpgrade","scrapReward","StatisticRequirement","lockedReason","getActualValue","ScrapAutomation","ScrapValue","createArray","ScrapAutomationSpeed","actions","speedMultiplier","action","reset","TimeLineSaveData","TimeLine","START_STATE","giveStartingCurrency","canAccessScrap","timeTravel","canTimeTravel","canAccessGasoline","canAccessLightning","canAccessPlutonium","FluxCapacitor","SCRAP_GOAL","getDefaultGame","settings","achievements","timeLine","process","attrs","scopedSlots","_u","fn","ref","notifications","_l","notification","class","backgroundColor","icon","textColor","_v","_s","text","props","required","computed","component","components","IgtNotification","staticStyle","_f","scrapAmount","_e","directives","rawName","expression","on","abs","_t","currencyType","brackets","methods","show","style","UpgradeComponent","availableActions","timeLineState","Lightning","Gasoline","_m","logProgress","showDevPanel","darkMode","Vue","toFixed","replace","date","year","Intl","DateTimeFormat","format","month","day","hours","getHours","hoursString","minutes","getMinutes","minutesString","string","charAt","toUpperCase","slice","Notifications","window","onload","inProduction","log","h","VueApp","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","priority","notFulfilled","fulfilled","j","keys","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}